{"ast":null,"code":"import { FileUploader } from 'ng2-file-upload';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ng2-file-upload\";\nexport class UploadComponent {\n  constructor(http) {\n    this.http = http;\n    this.urlApi = 'http://localhost:3000/api/upload';\n    this.uploader = new FileUploader({\n      url: this.urlApi,\n      itemAlias: 'fieldName'\n    });\n  }\n  ngOnInit() {\n    this.uploader.onAfterAddingFile = fichier => {\n      // si la requête n'utilise pas des identifiants\n      fichier.withCredentials = false;\n      console.log('Fichier ajouté:', fichier);\n    };\n    this.uploader.onCompleteItem = (item, status) => {\n      console.log('Fichier envoyé:', item);\n    };\n  }\n  downloadFile(url) {\n    fetch(url, {\n      method: 'get',\n      mode: 'no-cors',\n      referrerPolicy: 'no-referrer'\n    }).then(res => res.blob()).then(res => {\n      const aElement = document.createElement('a');\n      aElement.setAttribute('download', 'test');\n      const href = URL.createObjectURL(res);\n      aElement.href = href;\n      // aElement.setAttribute('href', href);\n      aElement.setAttribute('target', '_blank');\n      aElement.click();\n      URL.revokeObjectURL(href);\n    });\n    // return this.http.get('http://localhost:3000/documents/Capture d’écran de 2022-12-06 10-33-34.png', { responseType: 'blob' });\n    // const baseUrl = 'http://localhost:3000/documents/Capture d’écran de 2022-12-06 10-33-34.png';\n    // const token = 'my JWT';\n    // const headers = new HttpHeaders().set('authorization', 'Bearer ' + token);\n    // this.http.get(baseUrl, { headers, responseType: 'blob' as 'json' }).subscribe(\n    //   (response: any) => {\n    //     let dataType = response.type;\n    //     let binaryData = [];\n    //     binaryData.push(response);\n    //     let downloadLink = document.createElement('a');\n    //     downloadLink.href = window.URL.createObjectURL(new Blob(binaryData, { type: dataType }));\n    //     // downloadLink.setAttribute('download', 'nomfichier');\n    //     document.body.appendChild(downloadLink);\n    //     downloadLink.click();\n    //   }\n    // )\n  }\n}\n\nUploadComponent.ɵfac = function UploadComponent_Factory(t) {\n  return new (t || UploadComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nUploadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UploadComponent,\n  selectors: [[\"app-upload\"]],\n  decls: 11,\n  vars: 2,\n  consts: [[1, \"wrapper\"], [1, \"file-upload\"], [\"type\", \"file\", \"name\", \"document\", \"ng2FileSelect\", \"\", \"accept\", \"*\", 3, \"uploader\"], [\"type\", \"button\", 3, \"disabled\", \"click\"], [3, \"click\"]],\n  template: function UploadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Angular Image Upload Demo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1);\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵelementStart(5, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function UploadComponent_Template_button_click_5_listener() {\n        return ctx.uploader.uploadAll();\n      });\n      i0.ɵɵtext(6, \" Upload \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"h2\");\n      i0.ɵɵtext(8, \"T\\u00E9l\\u00E9charger\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function UploadComponent_Template_button_click_9_listener() {\n        return ctx.downloadFile(\"http://localhost:3000/documents/Capture d\\u2019\\u00E9cran de 2022-12-06 10-33-34.png\");\n      });\n      i0.ɵɵtext(10, \"download\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"uploader\", ctx.uploader);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.uploader.getNotUploadedItems().length);\n    }\n  },\n  dependencies: [i2.FileSelectDirective],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;;;;AAQ9C,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADxB,WAAM,GAAW,kCAAkC;IAE5C,aAAQ,GAAiB,IAAIH,YAAY,CAAC;MAC/CI,GAAG,EAAE,IAAI,CAACC,MAAM;MAChBC,SAAS,EAAE;KACZ,CAAC;EAJsC;EAKxCC,QAAQ;IACN,IAAI,CAACC,QAAQ,CAACC,iBAAiB,GAAIC,OAAY,IAAI;MACjD;MACAA,OAAO,CAACC,eAAe,GAAG,KAAK;MAC/BC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,OAAO,CAAC;IACzC,CAAC;IACD,IAAI,CAACF,QAAQ,CAACM,cAAc,GAAG,CAACC,IAAS,EAAEC,MAAW,KAAI;MACxDJ,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEE,IAAI,CAAC;IACtC,CAAC;EACH;EAEAE,YAAY,CAACb,GAAW;IAEtBc,KAAK,CAACd,GAAG,EAAE;MAAEe,MAAM,EAAE,KAAK;MAAEC,IAAI,EAAE,SAAS;MAAEC,cAAc,EAAE;IAAa,CAAE,CAAC,CAC1EC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACC,GAAG,IAAG;MACV,MAAME,QAAQ,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MAC5CF,QAAQ,CAACG,YAAY,CAAC,UAAU,EAAE,MAAM,CAAC;MACzC,MAAMC,IAAI,GAAGC,GAAG,CAACC,eAAe,CAACR,GAAG,CAAC;MACrCE,QAAQ,CAACI,IAAI,GAAGA,IAAI;MACpB;MACAJ,QAAQ,CAACG,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC;MACzCH,QAAQ,CAACO,KAAK,EAAE;MAChBF,GAAG,CAACG,eAAe,CAACJ,IAAI,CAAC;IAC3B,CAAC,CAAC;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;EACF;;;AAlDW5B,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAiC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT5BC,8BAAqB;MACbA,yCAAyB;MAAAA,iBAAK;MAClCA,8BAAyB;MACrBA,2BAAoF;MACpFA,iCAAyG;MAAnFA;QAAA,OAASC,wBAAoB;MAAA,EAAC;MAChDD,wBACJ;MAAAA,iBAAS;MAEbA,0BAAI;MAAAA,qCAAW;MAAAA,iBAAK;MACpBA,iCACyG;MAArGA;QAAA,OAASC,iBAAa,sFAA4E,CAAC;MAAA,EAAC;MAACD,yBAAQ;MAAAA,iBAAS;;;MAPrEA,eAAqB;MAArBA,uCAAqB;MACjBA,eAAmD;MAAnDA,qEAAmD","names":["FileUploader","UploadComponent","constructor","http","url","urlApi","itemAlias","ngOnInit","uploader","onAfterAddingFile","fichier","withCredentials","console","log","onCompleteItem","item","status","downloadFile","fetch","method","mode","referrerPolicy","then","res","blob","aElement","document","createElement","setAttribute","href","URL","createObjectURL","click","revokeObjectURL","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/pilki/Documents/work/nodejs/tarek/envoieDeFile/src/app/upload/upload.component.ts","/home/pilki/Documents/work/nodejs/tarek/envoieDeFile/src/app/upload/upload.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { HttpClient, HttpResponse } from '@angular/common/http'\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.css']\n})\nexport class UploadComponent {\n\n  urlApi: string = 'http://localhost:3000/api/upload';\n  constructor(private http: HttpClient) { }\n  public uploader: FileUploader = new FileUploader({\n    url: this.urlApi,\n    itemAlias: 'fieldName',\n  });\n  ngOnInit() {\n    this.uploader.onAfterAddingFile = (fichier: any) => {\n      // si la requête n'utilise pas des identifiants\n      fichier.withCredentials = false;\n      console.log('Fichier ajouté:', fichier);\n    };\n    this.uploader.onCompleteItem = (item: any, status: any) => {\n      console.log('Fichier envoyé:', item);\n    };\n  }\n\n  downloadFile(url: string): any {\n\n    fetch(url, { method: 'get', mode: 'no-cors', referrerPolicy: 'no-referrer' })\n      .then(res => res.blob())\n      .then(res => {\n        const aElement = document.createElement('a');\n        aElement.setAttribute('download', 'test');\n        const href = URL.createObjectURL(res);\n        aElement.href = href;\n        // aElement.setAttribute('href', href);\n        aElement.setAttribute('target', '_blank');\n        aElement.click();\n        URL.revokeObjectURL(href);\n      });\n    // return this.http.get('http://localhost:3000/documents/Capture d’écran de 2022-12-06 10-33-34.png', { responseType: 'blob' });\n    // const baseUrl = 'http://localhost:3000/documents/Capture d’écran de 2022-12-06 10-33-34.png';\n    // const token = 'my JWT';\n    // const headers = new HttpHeaders().set('authorization', 'Bearer ' + token);\n    // this.http.get(baseUrl, { headers, responseType: 'blob' as 'json' }).subscribe(\n    //   (response: any) => {\n    //     let dataType = response.type;\n    //     let binaryData = [];\n    //     binaryData.push(response);\n    //     let downloadLink = document.createElement('a');\n    //     downloadLink.href = window.URL.createObjectURL(new Blob(binaryData, { type: dataType }));\n\n    //     // downloadLink.setAttribute('download', 'nomfichier');\n    //     document.body.appendChild(downloadLink);\n    //     downloadLink.click();\n    //   }\n    // )\n  }\n\n\n\n}\n","<div class=\"wrapper\">\n    <h2>Angular Image Upload Demo</h2>\n    <div class=\"file-upload\">\n        <input type=\"file\" name=\"document\" ng2FileSelect [uploader]=\"uploader\" accept=\"*\" />\n        <button type=\"button\" (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n            Upload\n        </button>\n    </div>\n    <h2>Télécharger</h2>\n    <button\n        (click)=\"downloadFile('http://localhost:3000/documents/Capture d’écran de 2022-12-06 10-33-34.png')\">download</button>\n\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}