{"ast":null,"code":"import { EventEmitter, Directive, ElementRef, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} node\n * @return {?}\n */\nimport * as Éµngcc0 from '@angular/core';\nfunction isElement(node) {\n  return !!(node && (node.nodeName || node.prop && node.attr && node.find));\n}\nclass FileLikeObject {\n  /**\n   * @param {?} fileOrInput\n   */\n  constructor(fileOrInput) {\n    this.rawFile = fileOrInput;\n    /** @type {?} */\n    let isInput = isElement(fileOrInput);\n    /** @type {?} */\n    let fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n    /** @type {?} */\n    let postfix = typeof fakePathOrObject === 'string' ? 'FakePath' : 'Object';\n    /** @type {?} */\n    let method = '_createFrom' + postfix;\n    /** @type {?} */this[method](fakePathOrObject);\n  }\n  /**\n   * @param {?} path\n   * @return {?}\n   */\n  _createFromFakePath(path) {\n    this.lastModifiedDate = void 0;\n    this.size = void 0;\n    this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n    this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n  }\n  /**\n   * @param {?} object\n   * @return {?}\n   */\n  _createFromObject(object) {\n    this.size = object.size;\n    this.type = object.type;\n    this.name = object.name;\n  }\n}\nif (false) {\n  /** @type {?} */\n  FileLikeObject.prototype.lastModifiedDate;\n  /** @type {?} */\n  FileLikeObject.prototype.size;\n  /** @type {?} */\n  FileLikeObject.prototype.type;\n  /** @type {?} */\n  FileLikeObject.prototype.name;\n  /** @type {?} */\n  FileLikeObject.prototype.rawFile;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileItem {\n  /**\n   * @param {?} uploader\n   * @param {?} some\n   * @param {?} options\n   */\n  constructor(uploader, some, options) {\n    this.url = '/';\n    this.headers = [];\n    this.withCredentials = true;\n    this.formData = [];\n    this.isReady = false;\n    this.isUploading = false;\n    this.isUploaded = false;\n    this.isSuccess = false;\n    this.isCancel = false;\n    this.isError = false;\n    this.progress = 0;\n    this.index = void 0;\n    this.uploader = uploader;\n    this.some = some;\n    this.options = options;\n    this.file = new FileLikeObject(some);\n    this._file = some;\n    if (uploader.options) {\n      this.method = uploader.options.method || 'POST';\n      this.alias = uploader.options.itemAlias || 'file';\n    }\n    this.url = uploader.options.url;\n  }\n  /**\n   * @return {?}\n   */\n  upload() {\n    try {\n      this.uploader.uploadItem(this);\n    } catch (e) {\n      this.uploader._onCompleteItem(this, '', 0, {});\n      this.uploader._onErrorItem(this, '', 0, {});\n    }\n  }\n  /**\n   * @return {?}\n   */\n  cancel() {\n    this.uploader.cancelItem(this);\n  }\n  /**\n   * @return {?}\n   */\n  remove() {\n    this.uploader.removeFromQueue(this);\n  }\n  /**\n   * @return {?}\n   */\n  onBeforeUpload() {\n    return void 0;\n  }\n  /**\n   * @param {?} form\n   * @return {?}\n   */\n  onBuildForm(form) {\n    return {\n      form\n    };\n  }\n  /**\n   * @param {?} progress\n   * @return {?}\n   */\n  onProgress(progress) {\n    return {\n      progress\n    };\n  }\n  /**\n   * @param {?} response\n   * @param {?} status\n   * @param {?} headers\n   * @return {?}\n   */\n  onSuccess(response, status, headers) {\n    return {\n      response,\n      status,\n      headers\n    };\n  }\n  /**\n   * @param {?} response\n   * @param {?} status\n   * @param {?} headers\n   * @return {?}\n   */\n  onError(response, status, headers) {\n    return {\n      response,\n      status,\n      headers\n    };\n  }\n  /**\n   * @param {?} response\n   * @param {?} status\n   * @param {?} headers\n   * @return {?}\n   */\n  onCancel(response, status, headers) {\n    return {\n      response,\n      status,\n      headers\n    };\n  }\n  /**\n   * @param {?} response\n   * @param {?} status\n   * @param {?} headers\n   * @return {?}\n   */\n  onComplete(response, status, headers) {\n    return {\n      response,\n      status,\n      headers\n    };\n  }\n  /**\n   * @return {?}\n   */\n  _onBeforeUpload() {\n    this.isReady = true;\n    this.isUploading = true;\n    this.isUploaded = false;\n    this.isSuccess = false;\n    this.isCancel = false;\n    this.isError = false;\n    this.progress = 0;\n    this.onBeforeUpload();\n  }\n  /**\n   * @param {?} form\n   * @return {?}\n   */\n  _onBuildForm(form) {\n    this.onBuildForm(form);\n  }\n  /**\n   * @param {?} progress\n   * @return {?}\n   */\n  _onProgress(progress) {\n    this.progress = progress;\n    this.onProgress(progress);\n  }\n  /**\n   * @param {?} response\n   * @param {?} status\n   * @param {?} headers\n   * @return {?}\n   */\n  _onSuccess(response, status, headers) {\n    this.isReady = false;\n    this.isUploading = false;\n    this.isUploaded = true;\n    this.isSuccess = true;\n    this.isCancel = false;\n    this.isError = false;\n    this.progress = 100;\n    this.index = void 0;\n    this.onSuccess(response, status, headers);\n  }\n  /**\n   * @param {?} response\n   * @param {?} status\n   * @param {?} headers\n   * @return {?}\n   */\n  _onError(response, status, headers) {\n    this.isReady = false;\n    this.isUploading = false;\n    this.isUploaded = true;\n    this.isSuccess = false;\n    this.isCancel = false;\n    this.isError = true;\n    this.progress = 0;\n    this.index = void 0;\n    this.onError(response, status, headers);\n  }\n  /**\n   * @param {?} response\n   * @param {?} status\n   * @param {?} headers\n   * @return {?}\n   */\n  _onCancel(response, status, headers) {\n    this.isReady = false;\n    this.isUploading = false;\n    this.isUploaded = false;\n    this.isSuccess = false;\n    this.isCancel = true;\n    this.isError = false;\n    this.progress = 0;\n    this.index = void 0;\n    this.onCancel(response, status, headers);\n  }\n  /**\n   * @param {?} response\n   * @param {?} status\n   * @param {?} headers\n   * @return {?}\n   */\n  _onComplete(response, status, headers) {\n    this.onComplete(response, status, headers);\n    if (this.uploader.options.removeAfterUpload) {\n      this.remove();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  _prepareToUploading() {\n    this.index = this.index || ++this.uploader._nextIndex;\n    this.isReady = true;\n  }\n}\nif (false) {\n  /** @type {?} */\n  FileItem.prototype.file;\n  /** @type {?} */\n  FileItem.prototype._file;\n  /** @type {?} */\n  FileItem.prototype.alias;\n  /** @type {?} */\n  FileItem.prototype.url;\n  /** @type {?} */\n  FileItem.prototype.method;\n  /** @type {?} */\n  FileItem.prototype.headers;\n  /** @type {?} */\n  FileItem.prototype.withCredentials;\n  /** @type {?} */\n  FileItem.prototype.formData;\n  /** @type {?} */\n  FileItem.prototype.isReady;\n  /** @type {?} */\n  FileItem.prototype.isUploading;\n  /** @type {?} */\n  FileItem.prototype.isUploaded;\n  /** @type {?} */\n  FileItem.prototype.isSuccess;\n  /** @type {?} */\n  FileItem.prototype.isCancel;\n  /** @type {?} */\n  FileItem.prototype.isError;\n  /** @type {?} */\n  FileItem.prototype.progress;\n  /** @type {?} */\n  FileItem.prototype.index;\n  /** @type {?} */\n  FileItem.prototype._xhr;\n  /** @type {?} */\n  FileItem.prototype._form;\n  /**\n   * @type {?}\n   * @protected\n   */\n  FileItem.prototype.uploader;\n  /**\n   * @type {?}\n   * @protected\n   */\n  FileItem.prototype.some;\n  /**\n   * @type {?}\n   * @protected\n   */\n  FileItem.prototype.options;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileType {\n  /**\n   * @param {?} file\n   * @return {?}\n   */\n  static getMimeClass(file) {\n    /** @type {?} */\n    let mimeClass = 'application';\n    if (this.mime_psd.indexOf(file.type) !== -1) {\n      mimeClass = 'image';\n    } else if (file.type.match('image.*')) {\n      mimeClass = 'image';\n    } else if (file.type.match('video.*')) {\n      mimeClass = 'video';\n    } else if (file.type.match('audio.*')) {\n      mimeClass = 'audio';\n    } else if (file.type === 'application/pdf') {\n      mimeClass = 'pdf';\n    } else if (this.mime_compress.indexOf(file.type) !== -1) {\n      mimeClass = 'compress';\n    } else if (this.mime_doc.indexOf(file.type) !== -1) {\n      mimeClass = 'doc';\n    } else if (this.mime_xsl.indexOf(file.type) !== -1) {\n      mimeClass = 'xls';\n    } else if (this.mime_ppt.indexOf(file.type) !== -1) {\n      mimeClass = 'ppt';\n    }\n    if (mimeClass === 'application') {\n      mimeClass = this.fileTypeDetection(file.name);\n    }\n    return mimeClass;\n  }\n  /**\n   * @param {?} inputFilename\n   * @return {?}\n   */\n  static fileTypeDetection(inputFilename) {\n    /** @type {?} */\n    let types = {\n      'jpg': 'image',\n      'jpeg': 'image',\n      'tif': 'image',\n      'psd': 'image',\n      'bmp': 'image',\n      'png': 'image',\n      'nef': 'image',\n      'tiff': 'image',\n      'cr2': 'image',\n      'dwg': 'image',\n      'cdr': 'image',\n      'ai': 'image',\n      'indd': 'image',\n      'pin': 'image',\n      'cdp': 'image',\n      'skp': 'image',\n      'stp': 'image',\n      '3dm': 'image',\n      'mp3': 'audio',\n      'wav': 'audio',\n      'wma': 'audio',\n      'mod': 'audio',\n      'm4a': 'audio',\n      'compress': 'compress',\n      'zip': 'compress',\n      'rar': 'compress',\n      '7z': 'compress',\n      'lz': 'compress',\n      'z01': 'compress',\n      'bz2': 'compress',\n      'gz': 'compress',\n      'pdf': 'pdf',\n      'xls': 'xls',\n      'xlsx': 'xls',\n      'ods': 'xls',\n      'mp4': 'video',\n      'avi': 'video',\n      'wmv': 'video',\n      'mpg': 'video',\n      'mts': 'video',\n      'flv': 'video',\n      '3gp': 'video',\n      'vob': 'video',\n      'm4v': 'video',\n      'mpeg': 'video',\n      'm2ts': 'video',\n      'mov': 'video',\n      'doc': 'doc',\n      'docx': 'doc',\n      'eps': 'doc',\n      'txt': 'doc',\n      'odt': 'doc',\n      'rtf': 'doc',\n      'ppt': 'ppt',\n      'pptx': 'ppt',\n      'pps': 'ppt',\n      'ppsx': 'ppt',\n      'odp': 'ppt'\n    };\n    /** @type {?} */\n    let chunks = inputFilename.split('.');\n    if (chunks.length < 2) {\n      return 'application';\n    }\n    /** @type {?} */\n    let extension = chunks[chunks.length - 1].toLowerCase();\n    if (types[extension] === undefined) {\n      return 'application';\n    } else {\n      return types[extension];\n    }\n  }\n}\n/*  MS office  */\nFileType.mime_doc = ['application/msword', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/vnd.openxmlformats-officedocument.wordprocessingml.template', 'application/vnd.ms-word.document.macroEnabled.12', 'application/vnd.ms-word.template.macroEnabled.12'];\nFileType.mime_xsl = ['application/vnd.ms-excel', 'application/vnd.ms-excel', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/vnd.openxmlformats-officedocument.spreadsheetml.template', 'application/vnd.ms-excel.sheet.macroEnabled.12', 'application/vnd.ms-excel.template.macroEnabled.12', 'application/vnd.ms-excel.addin.macroEnabled.12', 'application/vnd.ms-excel.sheet.binary.macroEnabled.12'];\nFileType.mime_ppt = ['application/vnd.ms-powerpoint', 'application/vnd.ms-powerpoint', 'application/vnd.ms-powerpoint', 'application/vnd.ms-powerpoint', 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'application/vnd.openxmlformats-officedocument.presentationml.template', 'application/vnd.openxmlformats-officedocument.presentationml.slideshow', 'application/vnd.ms-powerpoint.addin.macroEnabled.12', 'application/vnd.ms-powerpoint.presentation.macroEnabled.12', 'application/vnd.ms-powerpoint.presentation.macroEnabled.12', 'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'];\n/* PSD */\nFileType.mime_psd = ['image/photoshop', 'image/x-photoshop', 'image/psd', 'application/photoshop', 'application/psd', 'zz-application/zz-winassoc-psd'];\n/* Compressed files */\nFileType.mime_compress = ['application/x-gtar', 'application/x-gcompress', 'application/compress', 'application/x-tar', 'application/x-rar-compressed', 'application/octet-stream', 'application/x-zip-compressed', 'application/zip-compressed', 'application/x-7z-compressed', 'application/gzip', 'application/x-bzip2'];\nif (false) {\n  /** @type {?} */\n  FileType.mime_doc;\n  /** @type {?} */\n  FileType.mime_xsl;\n  /** @type {?} */\n  FileType.mime_ppt;\n  /** @type {?} */\n  FileType.mime_psd;\n  /** @type {?} */\n  FileType.mime_compress;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isFile(value) {\n  return File && value instanceof File;\n}\n/**\n * @record\n */\nfunction Headers() {}\nif (false) {\n  /** @type {?} */\n  Headers.prototype.name;\n  /** @type {?} */\n  Headers.prototype.value;\n}\n/**\n * @record\n */\nfunction FileUploaderOptions() {}\nif (false) {\n  /** @type {?|undefined} */\n  FileUploaderOptions.prototype.allowedMimeType;\n  /** @type {?|undefined} */\n  FileUploaderOptions.prototype.allowedFileType;\n  /** @type {?|undefined} */\n  FileUploaderOptions.prototype.autoUpload;\n  /** @type {?|undefined} */\n  FileUploaderOptions.prototype.isHTML5;\n  /** @type {?|undefined} */\n  FileUploaderOptions.prototype.filters;\n  /** @type {?|undefined} */\n  FileUploaderOptions.prototype.headers;\n  /** @type {?|undefined} */\n  FileUploaderOptions.prototype.method;\n  /** @type {?|undefined} */\n  FileUploaderOptions.prototype.authToken;\n  /** @type {?|undefined} */\n  FileUploaderOptions.prototype.maxFileSize;\n  /** @type {?|undefined} */\n  FileUploaderOptions.prototype.queueLimit;\n  /** @type {?|undefined} */\n  FileUploaderOptions.prototype.removeAfterUpload;\n  /** @type {?|undefined} */\n  FileUploaderOptions.prototype.url;\n  /** @type {?|undefined} */\n  FileUploaderOptions.prototype.disableMultipart;\n  /** @type {?|undefined} */\n  FileUploaderOptions.prototype.itemAlias;\n  /** @type {?|undefined} */\n  FileUploaderOptions.prototype.authTokenHeader;\n  /** @type {?|undefined} */\n  FileUploaderOptions.prototype.additionalParameter;\n  /** @type {?|undefined} */\n  FileUploaderOptions.prototype.parametersBeforeFiles;\n  /** @type {?|undefined} */\n  FileUploaderOptions.prototype.formatDataFunction;\n  /** @type {?|undefined} */\n  FileUploaderOptions.prototype.formatDataFunctionIsAsync;\n}\nclass FileUploader {\n  /**\n   * @param {?} options\n   */\n  constructor(options) {\n    this.isUploading = false;\n    this.queue = [];\n    this.progress = 0;\n    this._nextIndex = 0;\n    this.options = {\n      autoUpload: false,\n      isHTML5: true,\n      filters: [],\n      removeAfterUpload: false,\n      disableMultipart: false,\n      formatDataFunction:\n      /**\n      * @param {?} item\n      * @return {?}\n      */\n      item => item._file,\n      formatDataFunctionIsAsync: false\n    };\n    this.setOptions(options);\n    this.response = new EventEmitter();\n  }\n  /**\n   * @param {?} options\n   * @return {?}\n   */\n  setOptions(options) {\n    this.options = Object.assign(this.options, options);\n    this.authToken = this.options.authToken;\n    this.authTokenHeader = this.options.authTokenHeader || 'Authorization';\n    this.autoUpload = this.options.autoUpload;\n    this.options.filters.unshift({\n      name: 'queueLimit',\n      fn: this._queueLimitFilter\n    });\n    if (this.options.maxFileSize) {\n      this.options.filters.unshift({\n        name: 'fileSize',\n        fn: this._fileSizeFilter\n      });\n    }\n    if (this.options.allowedFileType) {\n      this.options.filters.unshift({\n        name: 'fileType',\n        fn: this._fileTypeFilter\n      });\n    }\n    if (this.options.allowedMimeType) {\n      this.options.filters.unshift({\n        name: 'mimeType',\n        fn: this._mimeTypeFilter\n      });\n    }\n    for (let i = 0; i < this.queue.length; i++) {\n      this.queue[i].url = this.options.url;\n    }\n  }\n  /**\n   * @param {?} files\n   * @param {?=} options\n   * @param {?=} filters\n   * @return {?}\n   */\n  addToQueue(files, options, filters) {\n    /** @type {?} */\n    let list = [];\n    for (let file of files) {\n      list.push(file);\n    }\n    /** @type {?} */\n    let arrayOfFilters = this._getFilters(filters);\n    /** @type {?} */\n    let count = this.queue.length;\n    /** @type {?} */\n    let addedFileItems = [];\n    list.map(\n    /**\n    * @param {?} some\n    * @return {?}\n    */\n    some => {\n      if (!options) {\n        options = this.options;\n      }\n      /** @type {?} */\n      let temp = new FileLikeObject(some);\n      if (this._isValidFile(temp, arrayOfFilters, options)) {\n        /** @type {?} */\n        let fileItem = new FileItem(this, some, options);\n        addedFileItems.push(fileItem);\n        this.queue.push(fileItem);\n        this._onAfterAddingFile(fileItem);\n      } else {\n        /** @type {?} */\n        let filter = arrayOfFilters[this._failFilterIndex];\n        this._onWhenAddingFileFailed(temp, filter, options);\n      }\n    });\n    if (this.queue.length !== count) {\n      this._onAfterAddingAll(addedFileItems);\n      this.progress = this._getTotalProgress();\n    }\n    this._render();\n    if (this.options.autoUpload) {\n      this.uploadAll();\n    }\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  removeFromQueue(value) {\n    /** @type {?} */\n    let index = this.getIndexOfItem(value);\n    /** @type {?} */\n    let item = this.queue[index];\n    if (item.isUploading) {\n      item.cancel();\n    }\n    this.queue.splice(index, 1);\n    this.progress = this._getTotalProgress();\n  }\n  /**\n   * @return {?}\n   */\n  clearQueue() {\n    while (this.queue.length) {\n      this.queue[0].remove();\n    }\n    this.progress = 0;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  uploadItem(value) {\n    /** @type {?} */\n    let index = this.getIndexOfItem(value);\n    /** @type {?} */\n    let item = this.queue[index];\n    /** @type {?} */\n    let transport = this.options.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n    item._prepareToUploading();\n    if (this.isUploading) {\n      return;\n    }\n    this.isUploading = true;\n    /** @type {?} */this[transport](item);\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  cancelItem(value) {\n    /** @type {?} */\n    let index = this.getIndexOfItem(value);\n    /** @type {?} */\n    let item = this.queue[index];\n    /** @type {?} */\n    let prop = this.options.isHTML5 ? item._xhr : item._form;\n    if (item && item.isUploading) {\n      prop.abort();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  uploadAll() {\n    /** @type {?} */\n    let items = this.getNotUploadedItems().filter(\n    /**\n    * @param {?} item\n    * @return {?}\n    */\n    item => !item.isUploading);\n    if (!items.length) {\n      return;\n    }\n    items.map(\n    /**\n    * @param {?} item\n    * @return {?}\n    */\n    item => item._prepareToUploading());\n    items[0].upload();\n  }\n  /**\n   * @return {?}\n   */\n  cancelAll() {\n    /** @type {?} */\n    let items = this.getNotUploadedItems();\n    items.map(\n    /**\n    * @param {?} item\n    * @return {?}\n    */\n    item => item.cancel());\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  isFile(value) {\n    return isFile(value);\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  isFileLikeObject(value) {\n    return value instanceof FileLikeObject;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  getIndexOfItem(value) {\n    return typeof value === 'number' ? value : this.queue.indexOf(value);\n  }\n  /**\n   * @return {?}\n   */\n  getNotUploadedItems() {\n    return this.queue.filter(\n    /**\n    * @param {?} item\n    * @return {?}\n    */\n    item => !item.isUploaded);\n  }\n  /**\n   * @return {?}\n   */\n  getReadyItems() {\n    return this.queue.filter(\n    /**\n    * @param {?} item\n    * @return {?}\n    */\n    item => item.isReady && !item.isUploading).sort(\n    /**\n    * @param {?} item1\n    * @param {?} item2\n    * @return {?}\n    */\n    (item1, item2) => item1.index - item2.index);\n  }\n  /**\n   * @return {?}\n   */\n  destroy() {\n    return void 0;\n  }\n  /**\n   * @param {?} fileItems\n   * @return {?}\n   */\n  onAfterAddingAll(fileItems) {\n    return {\n      fileItems\n    };\n  }\n  /**\n   * @param {?} fileItem\n   * @param {?} form\n   * @return {?}\n   */\n  onBuildItemForm(fileItem, form) {\n    return {\n      fileItem,\n      form\n    };\n  }\n  /**\n   * @param {?} fileItem\n   * @return {?}\n   */\n  onAfterAddingFile(fileItem) {\n    return {\n      fileItem\n    };\n  }\n  /**\n   * @param {?} item\n   * @param {?} filter\n   * @param {?} options\n   * @return {?}\n   */\n  onWhenAddingFileFailed(item, filter, options) {\n    return {\n      item,\n      filter,\n      options\n    };\n  }\n  /**\n   * @param {?} fileItem\n   * @return {?}\n   */\n  onBeforeUploadItem(fileItem) {\n    return {\n      fileItem\n    };\n  }\n  /**\n   * @param {?} fileItem\n   * @param {?} progress\n   * @return {?}\n   */\n  onProgressItem(fileItem, progress) {\n    return {\n      fileItem,\n      progress\n    };\n  }\n  /**\n   * @param {?} progress\n   * @return {?}\n   */\n  onProgressAll(progress) {\n    return {\n      progress\n    };\n  }\n  /**\n   * @param {?} item\n   * @param {?} response\n   * @param {?} status\n   * @param {?} headers\n   * @return {?}\n   */\n  onSuccessItem(item, response, status, headers) {\n    return {\n      item,\n      response,\n      status,\n      headers\n    };\n  }\n  /**\n   * @param {?} item\n   * @param {?} response\n   * @param {?} status\n   * @param {?} headers\n   * @return {?}\n   */\n  onErrorItem(item, response, status, headers) {\n    return {\n      item,\n      response,\n      status,\n      headers\n    };\n  }\n  /**\n   * @param {?} item\n   * @param {?} response\n   * @param {?} status\n   * @param {?} headers\n   * @return {?}\n   */\n  onCancelItem(item, response, status, headers) {\n    return {\n      item,\n      response,\n      status,\n      headers\n    };\n  }\n  /**\n   * @param {?} item\n   * @param {?} response\n   * @param {?} status\n   * @param {?} headers\n   * @return {?}\n   */\n  onCompleteItem(item, response, status, headers) {\n    return {\n      item,\n      response,\n      status,\n      headers\n    };\n  }\n  /**\n   * @return {?}\n   */\n  onCompleteAll() {\n    return void 0;\n  }\n  /**\n   * @param {?} item\n   * @return {?}\n   */\n  _mimeTypeFilter(item) {\n    return !(this.options.allowedMimeType && this.options.allowedMimeType.indexOf(item.type) === -1);\n  }\n  /**\n   * @param {?} item\n   * @return {?}\n   */\n  _fileSizeFilter(item) {\n    return !(this.options.maxFileSize && item.size > this.options.maxFileSize);\n  }\n  /**\n   * @param {?} item\n   * @return {?}\n   */\n  _fileTypeFilter(item) {\n    return !(this.options.allowedFileType && this.options.allowedFileType.indexOf(FileType.getMimeClass(item)) === -1);\n  }\n  /**\n   * @param {?} item\n   * @param {?} response\n   * @param {?} status\n   * @param {?} headers\n   * @return {?}\n   */\n  _onErrorItem(item, response, status, headers) {\n    item._onError(response, status, headers);\n    this.onErrorItem(item, response, status, headers);\n  }\n  /**\n   * @param {?} item\n   * @param {?} response\n   * @param {?} status\n   * @param {?} headers\n   * @return {?}\n   */\n  _onCompleteItem(item, response, status, headers) {\n    item._onComplete(response, status, headers);\n    this.onCompleteItem(item, response, status, headers);\n    /** @type {?} */\n    let nextItem = this.getReadyItems()[0];\n    this.isUploading = false;\n    if (nextItem) {\n      nextItem.upload();\n      return;\n    }\n    this.onCompleteAll();\n    this.progress = this._getTotalProgress();\n    this._render();\n  }\n  /**\n   * @protected\n   * @param {?} parsedHeaders\n   * @return {?}\n   */\n  _headersGetter(parsedHeaders) {\n    return (\n      /**\n      * @param {?} name\n      * @return {?}\n      */\n      name => {\n        if (name) {\n          return parsedHeaders[name.toLowerCase()] || void 0;\n        }\n        return parsedHeaders;\n      }\n    );\n  }\n  /**\n   * @protected\n   * @param {?} item\n   * @return {?}\n   */\n  _xhrTransport(item) {\n    /** @type {?} */\n    let that = this;\n    /** @type {?} */\n    let xhr = item._xhr = new XMLHttpRequest();\n    /** @type {?} */\n    let sendable;\n    this._onBeforeUploadItem(item);\n    if (typeof item._file.size !== 'number') {\n      throw new TypeError('The file specified is no longer valid');\n    }\n    if (!this.options.disableMultipart) {\n      sendable = new FormData();\n      this._onBuildItemForm(item, sendable);\n      /** @type {?} */\n      const appendFile =\n      /**\n      * @return {?}\n      */\n      () => sendable.append(item.alias, item._file, item.file.name);\n      if (!this.options.parametersBeforeFiles) {\n        appendFile();\n      }\n      // For AWS, Additional Parameters must come BEFORE Files\n      if (this.options.additionalParameter !== undefined) {\n        Object.keys(this.options.additionalParameter).forEach(\n        /**\n        * @param {?} key\n        * @return {?}\n        */\n        key => {\n          /** @type {?} */\n          let paramVal = this.options.additionalParameter[key];\n          // Allow an additional parameter to include the filename\n          if (typeof paramVal === 'string' && paramVal.indexOf('{{file_name}}') >= 0) {\n            paramVal = paramVal.replace('{{file_name}}', item.file.name);\n          }\n          sendable.append(key, paramVal);\n        });\n      }\n      if (this.options.parametersBeforeFiles) {\n        appendFile();\n      }\n    } else {\n      sendable = this.options.formatDataFunction(item);\n    }\n    xhr.upload.onprogress =\n    /**\n    * @param {?} event\n    * @return {?}\n    */\n    event => {\n      /** @type {?} */\n      let progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n      this._onProgressItem(item, progress);\n    };\n    xhr.onload =\n    /**\n    * @return {?}\n    */\n    () => {\n      /** @type {?} */\n      let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n      /** @type {?} */\n      let response = this._transformResponse(xhr.response, headers);\n      /** @type {?} */\n      let gist = this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n      /** @type {?} */\n      let method = '_on' + gist + 'Item';\n      /** @type {?} */this[method](item, response, xhr.status, headers);\n      this._onCompleteItem(item, response, xhr.status, headers);\n    };\n    xhr.onerror =\n    /**\n    * @return {?}\n    */\n    () => {\n      /** @type {?} */\n      let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n      /** @type {?} */\n      let response = this._transformResponse(xhr.response, headers);\n      this._onErrorItem(item, response, xhr.status, headers);\n      this._onCompleteItem(item, response, xhr.status, headers);\n    };\n    xhr.onabort =\n    /**\n    * @return {?}\n    */\n    () => {\n      /** @type {?} */\n      let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n      /** @type {?} */\n      let response = this._transformResponse(xhr.response, headers);\n      this._onCancelItem(item, response, xhr.status, headers);\n      this._onCompleteItem(item, response, xhr.status, headers);\n    };\n    xhr.open(item.method, item.url, true);\n    xhr.withCredentials = item.withCredentials;\n    if (this.options.headers) {\n      for (let header of this.options.headers) {\n        xhr.setRequestHeader(header.name, header.value);\n      }\n    }\n    if (item.headers.length) {\n      for (let header of item.headers) {\n        xhr.setRequestHeader(header.name, header.value);\n      }\n    }\n    if (this.authToken) {\n      xhr.setRequestHeader(this.authTokenHeader, this.authToken);\n    }\n    xhr.onreadystatechange =\n    /**\n    * @return {?}\n    */\n    function () {\n      if (xhr.readyState == XMLHttpRequest.DONE) {\n        that.response.emit(xhr.responseText);\n      }\n    };\n    if (this.options.formatDataFunctionIsAsync) {\n      sendable.then(\n      /**\n      * @param {?} result\n      * @return {?}\n      */\n      result => xhr.send(JSON.stringify(result)));\n    } else {\n      xhr.send(sendable);\n    }\n    this._render();\n  }\n  /**\n   * @protected\n   * @param {?=} value\n   * @return {?}\n   */\n  _getTotalProgress(value = 0) {\n    if (this.options.removeAfterUpload) {\n      return value;\n    }\n    /** @type {?} */\n    let notUploaded = this.getNotUploadedItems().length;\n    /** @type {?} */\n    let uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n    /** @type {?} */\n    let ratio = 100 / this.queue.length;\n    /** @type {?} */\n    let current = value * ratio / 100;\n    return Math.round(uploaded * ratio + current);\n  }\n  /**\n   * @protected\n   * @param {?} filters\n   * @return {?}\n   */\n  _getFilters(filters) {\n    if (!filters) {\n      return this.options.filters;\n    }\n    if (Array.isArray(filters)) {\n      return filters;\n    }\n    if (typeof filters === 'string') {\n      /** @type {?} */\n      let names = filters.match(/[^\\s,]+/g);\n      return this.options.filters.filter(\n      /**\n      * @param {?} filter\n      * @return {?}\n      */\n      filter => names.indexOf(filter.name) !== -1);\n    }\n    return this.options.filters;\n  }\n  /**\n   * @protected\n   * @return {?}\n   */\n  _render() {\n    return void 0;\n  }\n  /**\n   * @protected\n   * @return {?}\n   */\n  _queueLimitFilter() {\n    return this.options.queueLimit === undefined || this.queue.length < this.options.queueLimit;\n  }\n  /**\n   * @protected\n   * @param {?} file\n   * @param {?} filters\n   * @param {?} options\n   * @return {?}\n   */\n  _isValidFile(file, filters, options) {\n    this._failFilterIndex = -1;\n    return !filters.length ? true : filters.every(\n    /**\n    * @param {?} filter\n    * @return {?}\n    */\n    filter => {\n      this._failFilterIndex++;\n      return filter.fn.call(this, file, options);\n    });\n  }\n  /**\n   * @protected\n   * @param {?} status\n   * @return {?}\n   */\n  _isSuccessCode(status) {\n    return status >= 200 && status < 300 || status === 304;\n  }\n  /**\n   * @protected\n   * @param {?} response\n   * @param {?} headers\n   * @return {?}\n   */\n  _transformResponse(response, headers) {\n    return response;\n  }\n  /**\n   * @protected\n   * @param {?} headers\n   * @return {?}\n   */\n  _parseHeaders(headers) {\n    /** @type {?} */\n    let parsed = {};\n    /** @type {?} */\n    let key;\n    /** @type {?} */\n    let val;\n    /** @type {?} */\n    let i;\n    if (!headers) {\n      return parsed;\n    }\n    headers.split('\\n').map(\n    /**\n    * @param {?} line\n    * @return {?}\n    */\n    line => {\n      i = line.indexOf(':');\n      key = line.slice(0, i).trim().toLowerCase();\n      val = line.slice(i + 1).trim();\n      if (key) {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    });\n    return parsed;\n  }\n  /**\n   * @protected\n   * @param {?} item\n   * @param {?} filter\n   * @param {?} options\n   * @return {?}\n   */\n  _onWhenAddingFileFailed(item, filter, options) {\n    this.onWhenAddingFileFailed(item, filter, options);\n  }\n  /**\n   * @protected\n   * @param {?} item\n   * @return {?}\n   */\n  _onAfterAddingFile(item) {\n    this.onAfterAddingFile(item);\n  }\n  /**\n   * @protected\n   * @param {?} items\n   * @return {?}\n   */\n  _onAfterAddingAll(items) {\n    this.onAfterAddingAll(items);\n  }\n  /**\n   * @protected\n   * @param {?} item\n   * @return {?}\n   */\n  _onBeforeUploadItem(item) {\n    item._onBeforeUpload();\n    this.onBeforeUploadItem(item);\n  }\n  /**\n   * @protected\n   * @param {?} item\n   * @param {?} form\n   * @return {?}\n   */\n  _onBuildItemForm(item, form) {\n    item._onBuildForm(form);\n    this.onBuildItemForm(item, form);\n  }\n  /**\n   * @protected\n   * @param {?} item\n   * @param {?} progress\n   * @return {?}\n   */\n  _onProgressItem(item, progress) {\n    /** @type {?} */\n    let total = this._getTotalProgress(progress);\n    this.progress = total;\n    item._onProgress(progress);\n    this.onProgressItem(item, progress);\n    this.onProgressAll(total);\n    this._render();\n  }\n  /**\n   * @protected\n   * @param {?} item\n   * @param {?} response\n   * @param {?} status\n   * @param {?} headers\n   * @return {?}\n   */\n  _onSuccessItem(item, response, status, headers) {\n    item._onSuccess(response, status, headers);\n    this.onSuccessItem(item, response, status, headers);\n  }\n  /**\n   * @protected\n   * @param {?} item\n   * @param {?} response\n   * @param {?} status\n   * @param {?} headers\n   * @return {?}\n   */\n  _onCancelItem(item, response, status, headers) {\n    item._onCancel(response, status, headers);\n    this.onCancelItem(item, response, status, headers);\n  }\n}\nif (false) {\n  /** @type {?} */\n  FileUploader.prototype.authToken;\n  /** @type {?} */\n  FileUploader.prototype.isUploading;\n  /** @type {?} */\n  FileUploader.prototype.queue;\n  /** @type {?} */\n  FileUploader.prototype.progress;\n  /** @type {?} */\n  FileUploader.prototype._nextIndex;\n  /** @type {?} */\n  FileUploader.prototype.autoUpload;\n  /** @type {?} */\n  FileUploader.prototype.authTokenHeader;\n  /** @type {?} */\n  FileUploader.prototype.response;\n  /** @type {?} */\n  FileUploader.prototype.options;\n  /**\n   * @type {?}\n   * @protected\n   */\n  FileUploader.prototype._failFilterIndex;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileSelectDirective {\n  /**\n   * @param {?} element\n   */\n  constructor(element) {\n    this.onFileSelected = new EventEmitter();\n    this.element = element;\n  }\n  /**\n   * @return {?}\n   */\n  getOptions() {\n    return this.uploader.options;\n  }\n  /**\n   * @return {?}\n   */\n  getFilters() {\n    return {};\n  }\n  /**\n   * @return {?}\n   */\n  isEmptyAfterSelection() {\n    return !!this.element.nativeElement.attributes.multiple;\n  }\n  /**\n   * @return {?}\n   */\n  onChange() {\n    /** @type {?} */\n    let files = this.element.nativeElement.files;\n    /** @type {?} */\n    let options = this.getOptions();\n    /** @type {?} */\n    let filters = this.getFilters();\n    this.uploader.addToQueue(files, options, filters);\n    this.onFileSelected.emit(files);\n    if (this.isEmptyAfterSelection()) {\n      this.element.nativeElement.value = '';\n    }\n  }\n}\nFileSelectDirective.Éµfac = function FileSelectDirective_Factory(t) {\n  return new (t || FileSelectDirective)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef));\n};\nFileSelectDirective.Éµdir = /*@__PURE__*/Éµngcc0.ÉµÉµdefineDirective({\n  type: FileSelectDirective,\n  selectors: [[\"\", \"ng2FileSelect\", \"\"]],\n  hostBindings: function FileSelectDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      Éµngcc0.ÉµÉµlistener(\"change\", function FileSelectDirective_change_HostBindingHandler() {\n        return ctx.onChange();\n      });\n    }\n  },\n  inputs: {\n    uploader: \"uploader\"\n  },\n  outputs: {\n    onFileSelected: \"onFileSelected\"\n  }\n});\n/** @nocollapse */\nFileSelectDirective.ctorParameters = () => [{\n  type: ElementRef\n}];\nFileSelectDirective.propDecorators = {\n  uploader: [{\n    type: Input\n  }],\n  onFileSelected: [{\n    type: Output\n  }],\n  onChange: [{\n    type: HostListener,\n    args: ['change']\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(FileSelectDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ng2FileSelect]'\n    }]\n  }], function () {\n    return [{\n      type: Éµngcc0.ElementRef\n    }];\n  }, {\n    onFileSelected: [{\n      type: Output\n    }],\n    /**\n     * @return {?}\n     */\n    onChange: [{\n      type: HostListener,\n      args: ['change']\n    }],\n    uploader: [{\n      type: Input\n    }]\n  });\n})();\nif (false) {\n  /** @type {?} */\n  FileSelectDirective.prototype.uploader;\n  /** @type {?} */\n  FileSelectDirective.prototype.onFileSelected;\n  /**\n   * @type {?}\n   * @protected\n   */\n  FileSelectDirective.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileDropDirective {\n  /**\n   * @param {?} element\n   */\n  constructor(element) {\n    this.fileOver = new EventEmitter();\n    this.onFileDrop = new EventEmitter();\n    this.element = element;\n  }\n  /**\n   * @return {?}\n   */\n  getOptions() {\n    return this.uploader.options;\n  }\n  /**\n   * @return {?}\n   */\n  getFilters() {\n    return {};\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n  onDrop(event) {\n    /** @type {?} */\n    let transfer = this._getTransfer(event);\n    if (!transfer) {\n      return;\n    }\n    /** @type {?} */\n    let options = this.getOptions();\n    /** @type {?} */\n    let filters = this.getFilters();\n    this._preventAndStop(event);\n    this.uploader.addToQueue(transfer.files, options, filters);\n    this.fileOver.emit(false);\n    this.onFileDrop.emit(transfer.files);\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n  onDragOver(event) {\n    /** @type {?} */\n    let transfer = this._getTransfer(event);\n    if (!this._haveFiles(transfer.types)) {\n      return;\n    }\n    transfer.dropEffect = 'copy';\n    this._preventAndStop(event);\n    this.fileOver.emit(true);\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n  onDragLeave(event) {\n    if ( /** @type {?} */this.element) {\n      if (event.currentTarget === /** @type {?} */this.element[0]) {\n        return;\n      }\n    }\n    this._preventAndStop(event);\n    this.fileOver.emit(false);\n  }\n  /**\n   * @protected\n   * @param {?} event\n   * @return {?}\n   */\n  _getTransfer(event) {\n    return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n  }\n  /**\n   * @protected\n   * @param {?} event\n   * @return {?}\n   */\n  _preventAndStop(event) {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n  /**\n   * @protected\n   * @param {?} types\n   * @return {?}\n   */\n  _haveFiles(types) {\n    if (!types) {\n      return false;\n    }\n    if (types.indexOf) {\n      return types.indexOf('Files') !== -1;\n    } else if (types.contains) {\n      return types.contains('Files');\n    } else {\n      return false;\n    }\n  }\n}\nFileDropDirective.Éµfac = function FileDropDirective_Factory(t) {\n  return new (t || FileDropDirective)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef));\n};\nFileDropDirective.Éµdir = /*@__PURE__*/Éµngcc0.ÉµÉµdefineDirective({\n  type: FileDropDirective,\n  selectors: [[\"\", \"ng2FileDrop\", \"\"]],\n  hostBindings: function FileDropDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      Éµngcc0.ÉµÉµlistener(\"drop\", function FileDropDirective_drop_HostBindingHandler($event) {\n        return ctx.onDrop($event);\n      })(\"dragover\", function FileDropDirective_dragover_HostBindingHandler($event) {\n        return ctx.onDragOver($event);\n      })(\"dragleave\", function FileDropDirective_dragleave_HostBindingHandler($event) {\n        return ctx.onDragLeave($event);\n      });\n    }\n  },\n  inputs: {\n    uploader: \"uploader\"\n  },\n  outputs: {\n    fileOver: \"fileOver\",\n    onFileDrop: \"onFileDrop\"\n  }\n});\n/** @nocollapse */\nFileDropDirective.ctorParameters = () => [{\n  type: ElementRef\n}];\nFileDropDirective.propDecorators = {\n  uploader: [{\n    type: Input\n  }],\n  fileOver: [{\n    type: Output\n  }],\n  onFileDrop: [{\n    type: Output\n  }],\n  onDrop: [{\n    type: HostListener,\n    args: ['drop', ['$event']]\n  }],\n  onDragOver: [{\n    type: HostListener,\n    args: ['dragover', ['$event']]\n  }],\n  onDragLeave: [{\n    type: HostListener,\n    args: ['dragleave', ['$event']]\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(FileDropDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ng2FileDrop]'\n    }]\n  }], function () {\n    return [{\n      type: Éµngcc0.ElementRef\n    }];\n  }, {\n    fileOver: [{\n      type: Output\n    }],\n    onFileDrop: [{\n      type: Output\n    }],\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDrop: [{\n      type: HostListener,\n      args: ['drop', ['$event']]\n    }],\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragOver: [{\n      type: HostListener,\n      args: ['dragover', ['$event']]\n    }],\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragLeave: [{\n      type: HostListener,\n      args: ['dragleave', ['$event']]\n    }],\n    uploader: [{\n      type: Input\n    }]\n  });\n})();\nif (false) {\n  /** @type {?} */\n  FileDropDirective.prototype.uploader;\n  /** @type {?} */\n  FileDropDirective.prototype.fileOver;\n  /** @type {?} */\n  FileDropDirective.prototype.onFileDrop;\n  /**\n   * @type {?}\n   * @protected\n   */\n  FileDropDirective.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileUploadModule {}\nFileUploadModule.Éµfac = function FileUploadModule_Factory(t) {\n  return new (t || FileUploadModule)();\n};\nFileUploadModule.Éµmod = /*@__PURE__*/Éµngcc0.ÉµÉµdefineNgModule({\n  type: FileUploadModule\n});\nFileUploadModule.Éµinj = /*@__PURE__*/Éµngcc0.ÉµÉµdefineInjector({\n  imports: [CommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(FileUploadModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [FileDropDirective, FileSelectDirective],\n      exports: [FileDropDirective, FileSelectDirective]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && Éµngcc0.ÉµÉµsetNgModuleScope(FileUploadModule, {\n    declarations: function () {\n      return [FileDropDirective, FileSelectDirective];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [FileDropDirective, FileSelectDirective];\n    }\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { FileDropDirective, FileItem, FileLikeObject, FileSelectDirective, FileUploadModule, FileUploader };","map":{"version":3,"names":["EventEmitter","Directive","ElementRef","Input","Output","HostListener","NgModule","CommonModule","Éµngcc0","isElement","node","nodeName","prop","attr","find","FileLikeObject","constructor","fileOrInput","rawFile","isInput","fakePathOrObject","value","postfix","method","_createFromFakePath","path","lastModifiedDate","size","type","slice","lastIndexOf","toLowerCase","name","_createFromObject","object","prototype","FileItem","uploader","some","options","url","headers","withCredentials","formData","isReady","isUploading","isUploaded","isSuccess","isCancel","isError","progress","index","file","_file","alias","itemAlias","upload","uploadItem","e","_onCompleteItem","_onErrorItem","cancel","cancelItem","remove","removeFromQueue","onBeforeUpload","onBuildForm","form","onProgress","onSuccess","response","status","onError","onCancel","onComplete","_onBeforeUpload","_onBuildForm","_onProgress","_onSuccess","_onError","_onCancel","_onComplete","removeAfterUpload","_prepareToUploading","_nextIndex","_xhr","_form","FileType","getMimeClass","mimeClass","mime_psd","indexOf","match","mime_compress","mime_doc","mime_xsl","mime_ppt","fileTypeDetection","inputFilename","types","chunks","split","length","extension","undefined","isFile","File","Headers","FileUploaderOptions","allowedMimeType","allowedFileType","autoUpload","isHTML5","filters","authToken","maxFileSize","queueLimit","disableMultipart","authTokenHeader","additionalParameter","parametersBeforeFiles","formatDataFunction","formatDataFunctionIsAsync","FileUploader","queue","item","setOptions","Object","assign","unshift","fn","_queueLimitFilter","_fileSizeFilter","_fileTypeFilter","_mimeTypeFilter","i","addToQueue","files","list","push","arrayOfFilters","_getFilters","count","addedFileItems","map","temp","_isValidFile","fileItem","_onAfterAddingFile","filter","_failFilterIndex","_onWhenAddingFileFailed","_onAfterAddingAll","_getTotalProgress","_render","uploadAll","getIndexOfItem","splice","clearQueue","transport","abort","items","getNotUploadedItems","cancelAll","isFileLikeObject","getReadyItems","sort","item1","item2","destroy","onAfterAddingAll","fileItems","onBuildItemForm","onAfterAddingFile","onWhenAddingFileFailed","onBeforeUploadItem","onProgressItem","onProgressAll","onSuccessItem","onErrorItem","onCancelItem","onCompleteItem","onCompleteAll","nextItem","_headersGetter","parsedHeaders","_xhrTransport","that","xhr","XMLHttpRequest","sendable","_onBeforeUploadItem","TypeError","FormData","_onBuildItemForm","appendFile","append","keys","forEach","key","paramVal","replace","onprogress","event","Math","round","lengthComputable","loaded","total","_onProgressItem","onload","_parseHeaders","getAllResponseHeaders","_transformResponse","gist","_isSuccessCode","onerror","onabort","_onCancelItem","open","header","setRequestHeader","onreadystatechange","readyState","DONE","emit","responseText","then","result","send","JSON","stringify","notUploaded","uploaded","ratio","current","Array","isArray","names","every","call","parsed","val","line","trim","_onSuccessItem","FileSelectDirective","element","onFileSelected","getOptions","getFilters","isEmptyAfterSelection","nativeElement","attributes","multiple","onChange","Éµfac","FileSelectDirective_Factory","t","ÉµÉµdirectiveInject","Éµdir","ÉµÉµdefineDirective","selectors","hostBindings","FileSelectDirective_HostBindings","rf","ctx","ÉµÉµlistener","FileSelectDirective_change_HostBindingHandler","inputs","outputs","ctorParameters","propDecorators","args","ngDevMode","ÉµsetClassMetadata","selector","FileDropDirective","fileOver","onFileDrop","onDrop","transfer","_getTransfer","_preventAndStop","onDragOver","_haveFiles","dropEffect","onDragLeave","currentTarget","dataTransfer","originalEvent","preventDefault","stopPropagation","contains","FileDropDirective_Factory","FileDropDirective_HostBindings","FileDropDirective_drop_HostBindingHandler","$event","FileDropDirective_dragover_HostBindingHandler","FileDropDirective_dragleave_HostBindingHandler","FileUploadModule","FileUploadModule_Factory","Éµmod","ÉµÉµdefineNgModule","Éµinj","ÉµÉµdefineInjector","imports","declarations","exports","ngJitMode","ÉµÉµsetNgModuleScope"],"sources":["/home/pilki/Documents/work/nodejs/cours download/envoieDeFile/node_modules/ng2-file-upload/__ivy_ngcc__/fesm2015/ng2-file-upload.js"],"sourcesContent":["import { EventEmitter, Directive, ElementRef, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} node\n * @return {?}\n */\nimport * as Éµngcc0 from '@angular/core';\nfunction isElement(node) {\n    return !!(node && (node.nodeName || node.prop && node.attr && node.find));\n}\nclass FileLikeObject {\n    /**\n     * @param {?} fileOrInput\n     */\n    constructor(fileOrInput) {\n        this.rawFile = fileOrInput;\n        /** @type {?} */\n        let isInput = isElement(fileOrInput);\n        /** @type {?} */\n        let fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n        /** @type {?} */\n        let postfix = typeof fakePathOrObject === 'string' ? 'FakePath' : 'Object';\n        /** @type {?} */\n        let method = '_createFrom' + postfix;\n        ((/** @type {?} */ (this)))[method](fakePathOrObject);\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    _createFromFakePath(path) {\n        this.lastModifiedDate = void 0;\n        this.size = void 0;\n        this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n        this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n    }\n    /**\n     * @param {?} object\n     * @return {?}\n     */\n    _createFromObject(object) {\n        this.size = object.size;\n        this.type = object.type;\n        this.name = object.name;\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileLikeObject.prototype.lastModifiedDate;\n    /** @type {?} */\n    FileLikeObject.prototype.size;\n    /** @type {?} */\n    FileLikeObject.prototype.type;\n    /** @type {?} */\n    FileLikeObject.prototype.name;\n    /** @type {?} */\n    FileLikeObject.prototype.rawFile;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileItem {\n    /**\n     * @param {?} uploader\n     * @param {?} some\n     * @param {?} options\n     */\n    constructor(uploader, some, options) {\n        this.url = '/';\n        this.headers = [];\n        this.withCredentials = true;\n        this.formData = [];\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.index = void 0;\n        this.uploader = uploader;\n        this.some = some;\n        this.options = options;\n        this.file = new FileLikeObject(some);\n        this._file = some;\n        if (uploader.options) {\n            this.method = uploader.options.method || 'POST';\n            this.alias = uploader.options.itemAlias || 'file';\n        }\n        this.url = uploader.options.url;\n    }\n    /**\n     * @return {?}\n     */\n    upload() {\n        try {\n            this.uploader.uploadItem(this);\n        }\n        catch (e) {\n            this.uploader._onCompleteItem(this, '', 0, {});\n            this.uploader._onErrorItem(this, '', 0, {});\n        }\n    }\n    /**\n     * @return {?}\n     */\n    cancel() {\n        this.uploader.cancelItem(this);\n    }\n    /**\n     * @return {?}\n     */\n    remove() {\n        this.uploader.removeFromQueue(this);\n    }\n    /**\n     * @return {?}\n     */\n    onBeforeUpload() {\n        return void 0;\n    }\n    /**\n     * @param {?} form\n     * @return {?}\n     */\n    onBuildForm(form) {\n        return { form };\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgress(progress) {\n        return { progress };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onSuccess(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onError(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCancel(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onComplete(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @return {?}\n     */\n    _onBeforeUpload() {\n        this.isReady = true;\n        this.isUploading = true;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.onBeforeUpload();\n    }\n    /**\n     * @param {?} form\n     * @return {?}\n     */\n    _onBuildForm(form) {\n        this.onBuildForm(form);\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    _onProgress(progress) {\n        this.progress = progress;\n        this.onProgress(progress);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onSuccess(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = true;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 100;\n        this.index = void 0;\n        this.onSuccess(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onError(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = true;\n        this.progress = 0;\n        this.index = void 0;\n        this.onError(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCancel(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = true;\n        this.isError = false;\n        this.progress = 0;\n        this.index = void 0;\n        this.onCancel(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onComplete(response, status, headers) {\n        this.onComplete(response, status, headers);\n        if (this.uploader.options.removeAfterUpload) {\n            this.remove();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _prepareToUploading() {\n        this.index = this.index || ++this.uploader._nextIndex;\n        this.isReady = true;\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileItem.prototype.file;\n    /** @type {?} */\n    FileItem.prototype._file;\n    /** @type {?} */\n    FileItem.prototype.alias;\n    /** @type {?} */\n    FileItem.prototype.url;\n    /** @type {?} */\n    FileItem.prototype.method;\n    /** @type {?} */\n    FileItem.prototype.headers;\n    /** @type {?} */\n    FileItem.prototype.withCredentials;\n    /** @type {?} */\n    FileItem.prototype.formData;\n    /** @type {?} */\n    FileItem.prototype.isReady;\n    /** @type {?} */\n    FileItem.prototype.isUploading;\n    /** @type {?} */\n    FileItem.prototype.isUploaded;\n    /** @type {?} */\n    FileItem.prototype.isSuccess;\n    /** @type {?} */\n    FileItem.prototype.isCancel;\n    /** @type {?} */\n    FileItem.prototype.isError;\n    /** @type {?} */\n    FileItem.prototype.progress;\n    /** @type {?} */\n    FileItem.prototype.index;\n    /** @type {?} */\n    FileItem.prototype._xhr;\n    /** @type {?} */\n    FileItem.prototype._form;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.uploader;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.some;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.options;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileType {\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    static getMimeClass(file) {\n        /** @type {?} */\n        let mimeClass = 'application';\n        if (this.mime_psd.indexOf(file.type) !== -1) {\n            mimeClass = 'image';\n        }\n        else if (file.type.match('image.*')) {\n            mimeClass = 'image';\n        }\n        else if (file.type.match('video.*')) {\n            mimeClass = 'video';\n        }\n        else if (file.type.match('audio.*')) {\n            mimeClass = 'audio';\n        }\n        else if (file.type === 'application/pdf') {\n            mimeClass = 'pdf';\n        }\n        else if (this.mime_compress.indexOf(file.type) !== -1) {\n            mimeClass = 'compress';\n        }\n        else if (this.mime_doc.indexOf(file.type) !== -1) {\n            mimeClass = 'doc';\n        }\n        else if (this.mime_xsl.indexOf(file.type) !== -1) {\n            mimeClass = 'xls';\n        }\n        else if (this.mime_ppt.indexOf(file.type) !== -1) {\n            mimeClass = 'ppt';\n        }\n        if (mimeClass === 'application') {\n            mimeClass = this.fileTypeDetection(file.name);\n        }\n        return mimeClass;\n    }\n    /**\n     * @param {?} inputFilename\n     * @return {?}\n     */\n    static fileTypeDetection(inputFilename) {\n        /** @type {?} */\n        let types = {\n            'jpg': 'image',\n            'jpeg': 'image',\n            'tif': 'image',\n            'psd': 'image',\n            'bmp': 'image',\n            'png': 'image',\n            'nef': 'image',\n            'tiff': 'image',\n            'cr2': 'image',\n            'dwg': 'image',\n            'cdr': 'image',\n            'ai': 'image',\n            'indd': 'image',\n            'pin': 'image',\n            'cdp': 'image',\n            'skp': 'image',\n            'stp': 'image',\n            '3dm': 'image',\n            'mp3': 'audio',\n            'wav': 'audio',\n            'wma': 'audio',\n            'mod': 'audio',\n            'm4a': 'audio',\n            'compress': 'compress',\n            'zip': 'compress',\n            'rar': 'compress',\n            '7z': 'compress',\n            'lz': 'compress',\n            'z01': 'compress',\n            'bz2': 'compress',\n            'gz': 'compress',\n            'pdf': 'pdf',\n            'xls': 'xls',\n            'xlsx': 'xls',\n            'ods': 'xls',\n            'mp4': 'video',\n            'avi': 'video',\n            'wmv': 'video',\n            'mpg': 'video',\n            'mts': 'video',\n            'flv': 'video',\n            '3gp': 'video',\n            'vob': 'video',\n            'm4v': 'video',\n            'mpeg': 'video',\n            'm2ts': 'video',\n            'mov': 'video',\n            'doc': 'doc',\n            'docx': 'doc',\n            'eps': 'doc',\n            'txt': 'doc',\n            'odt': 'doc',\n            'rtf': 'doc',\n            'ppt': 'ppt',\n            'pptx': 'ppt',\n            'pps': 'ppt',\n            'ppsx': 'ppt',\n            'odp': 'ppt'\n        };\n        /** @type {?} */\n        let chunks = inputFilename.split('.');\n        if (chunks.length < 2) {\n            return 'application';\n        }\n        /** @type {?} */\n        let extension = chunks[chunks.length - 1].toLowerCase();\n        if (types[extension] === undefined) {\n            return 'application';\n        }\n        else {\n            return types[extension];\n        }\n    }\n}\n/*  MS office  */\nFileType.mime_doc = [\n    'application/msword',\n    'application/msword',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.template',\n    'application/vnd.ms-word.document.macroEnabled.12',\n    'application/vnd.ms-word.template.macroEnabled.12'\n];\nFileType.mime_xsl = [\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\n    'application/vnd.ms-excel.sheet.macroEnabled.12',\n    'application/vnd.ms-excel.template.macroEnabled.12',\n    'application/vnd.ms-excel.addin.macroEnabled.12',\n    'application/vnd.ms-excel.sheet.binary.macroEnabled.12'\n];\nFileType.mime_ppt = [\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    'application/vnd.openxmlformats-officedocument.presentationml.template',\n    'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n    'application/vnd.ms-powerpoint.addin.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'\n];\n/* PSD */\nFileType.mime_psd = [\n    'image/photoshop',\n    'image/x-photoshop',\n    'image/psd',\n    'application/photoshop',\n    'application/psd',\n    'zz-application/zz-winassoc-psd'\n];\n/* Compressed files */\nFileType.mime_compress = [\n    'application/x-gtar',\n    'application/x-gcompress',\n    'application/compress',\n    'application/x-tar',\n    'application/x-rar-compressed',\n    'application/octet-stream',\n    'application/x-zip-compressed',\n    'application/zip-compressed',\n    'application/x-7z-compressed',\n    'application/gzip',\n    'application/x-bzip2'\n];\nif (false) {\n    /** @type {?} */\n    FileType.mime_doc;\n    /** @type {?} */\n    FileType.mime_xsl;\n    /** @type {?} */\n    FileType.mime_ppt;\n    /** @type {?} */\n    FileType.mime_psd;\n    /** @type {?} */\n    FileType.mime_compress;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isFile(value) {\n    return (File && value instanceof File);\n}\n/**\n * @record\n */\nfunction Headers() { }\nif (false) {\n    /** @type {?} */\n    Headers.prototype.name;\n    /** @type {?} */\n    Headers.prototype.value;\n}\n/**\n * @record\n */\nfunction FileUploaderOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.allowedMimeType;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.allowedFileType;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.autoUpload;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.isHTML5;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.filters;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.headers;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.method;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.authToken;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.maxFileSize;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.queueLimit;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.removeAfterUpload;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.url;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.disableMultipart;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.itemAlias;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.authTokenHeader;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.additionalParameter;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.parametersBeforeFiles;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.formatDataFunction;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.formatDataFunctionIsAsync;\n}\nclass FileUploader {\n    /**\n     * @param {?} options\n     */\n    constructor(options) {\n        this.isUploading = false;\n        this.queue = [];\n        this.progress = 0;\n        this._nextIndex = 0;\n        this.options = {\n            autoUpload: false,\n            isHTML5: true,\n            filters: [],\n            removeAfterUpload: false,\n            disableMultipart: false,\n            formatDataFunction: (/**\n             * @param {?} item\n             * @return {?}\n             */\n            (item) => item._file),\n            formatDataFunctionIsAsync: false\n        };\n        this.setOptions(options);\n        this.response = new EventEmitter();\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    setOptions(options) {\n        this.options = Object.assign(this.options, options);\n        this.authToken = this.options.authToken;\n        this.authTokenHeader = this.options.authTokenHeader || 'Authorization';\n        this.autoUpload = this.options.autoUpload;\n        this.options.filters.unshift({ name: 'queueLimit', fn: this._queueLimitFilter });\n        if (this.options.maxFileSize) {\n            this.options.filters.unshift({ name: 'fileSize', fn: this._fileSizeFilter });\n        }\n        if (this.options.allowedFileType) {\n            this.options.filters.unshift({ name: 'fileType', fn: this._fileTypeFilter });\n        }\n        if (this.options.allowedMimeType) {\n            this.options.filters.unshift({ name: 'mimeType', fn: this._mimeTypeFilter });\n        }\n        for (let i = 0; i < this.queue.length; i++) {\n            this.queue[i].url = this.options.url;\n        }\n    }\n    /**\n     * @param {?} files\n     * @param {?=} options\n     * @param {?=} filters\n     * @return {?}\n     */\n    addToQueue(files, options, filters) {\n        /** @type {?} */\n        let list = [];\n        for (let file of files) {\n            list.push(file);\n        }\n        /** @type {?} */\n        let arrayOfFilters = this._getFilters(filters);\n        /** @type {?} */\n        let count = this.queue.length;\n        /** @type {?} */\n        let addedFileItems = [];\n        list.map((/**\n         * @param {?} some\n         * @return {?}\n         */\n        (some) => {\n            if (!options) {\n                options = this.options;\n            }\n            /** @type {?} */\n            let temp = new FileLikeObject(some);\n            if (this._isValidFile(temp, arrayOfFilters, options)) {\n                /** @type {?} */\n                let fileItem = new FileItem(this, some, options);\n                addedFileItems.push(fileItem);\n                this.queue.push(fileItem);\n                this._onAfterAddingFile(fileItem);\n            }\n            else {\n                /** @type {?} */\n                let filter = arrayOfFilters[this._failFilterIndex];\n                this._onWhenAddingFileFailed(temp, filter, options);\n            }\n        }));\n        if (this.queue.length !== count) {\n            this._onAfterAddingAll(addedFileItems);\n            this.progress = this._getTotalProgress();\n        }\n        this._render();\n        if (this.options.autoUpload) {\n            this.uploadAll();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    removeFromQueue(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        if (item.isUploading) {\n            item.cancel();\n        }\n        this.queue.splice(index, 1);\n        this.progress = this._getTotalProgress();\n    }\n    /**\n     * @return {?}\n     */\n    clearQueue() {\n        while (this.queue.length) {\n            this.queue[0].remove();\n        }\n        this.progress = 0;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    uploadItem(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        /** @type {?} */\n        let transport = this.options.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n        item._prepareToUploading();\n        if (this.isUploading) {\n            return;\n        }\n        this.isUploading = true;\n        ((/** @type {?} */ (this)))[transport](item);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    cancelItem(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        /** @type {?} */\n        let prop = this.options.isHTML5 ? item._xhr : item._form;\n        if (item && item.isUploading) {\n            prop.abort();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    uploadAll() {\n        /** @type {?} */\n        let items = this.getNotUploadedItems().filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => !item.isUploading));\n        if (!items.length) {\n            return;\n        }\n        items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item._prepareToUploading()));\n        items[0].upload();\n    }\n    /**\n     * @return {?}\n     */\n    cancelAll() {\n        /** @type {?} */\n        let items = this.getNotUploadedItems();\n        items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item.cancel()));\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    isFile(value) {\n        return isFile(value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    isFileLikeObject(value) {\n        return value instanceof FileLikeObject;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    getIndexOfItem(value) {\n        return typeof value === 'number' ? value : this.queue.indexOf(value);\n    }\n    /**\n     * @return {?}\n     */\n    getNotUploadedItems() {\n        return this.queue.filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => !item.isUploaded));\n    }\n    /**\n     * @return {?}\n     */\n    getReadyItems() {\n        return this.queue\n            .filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => (item.isReady && !item.isUploading)))\n            .sort((/**\n         * @param {?} item1\n         * @param {?} item2\n         * @return {?}\n         */\n        (item1, item2) => item1.index - item2.index));\n    }\n    /**\n     * @return {?}\n     */\n    destroy() {\n        return void 0;\n    }\n    /**\n     * @param {?} fileItems\n     * @return {?}\n     */\n    onAfterAddingAll(fileItems) {\n        return { fileItems };\n    }\n    /**\n     * @param {?} fileItem\n     * @param {?} form\n     * @return {?}\n     */\n    onBuildItemForm(fileItem, form) {\n        return { fileItem, form };\n    }\n    /**\n     * @param {?} fileItem\n     * @return {?}\n     */\n    onAfterAddingFile(fileItem) {\n        return { fileItem };\n    }\n    /**\n     * @param {?} item\n     * @param {?} filter\n     * @param {?} options\n     * @return {?}\n     */\n    onWhenAddingFileFailed(item, filter, options) {\n        return { item, filter, options };\n    }\n    /**\n     * @param {?} fileItem\n     * @return {?}\n     */\n    onBeforeUploadItem(fileItem) {\n        return { fileItem };\n    }\n    /**\n     * @param {?} fileItem\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgressItem(fileItem, progress) {\n        return { fileItem, progress };\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgressAll(progress) {\n        return { progress };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onSuccessItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onErrorItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCancelItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCompleteItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @return {?}\n     */\n    onCompleteAll() {\n        return void 0;\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _mimeTypeFilter(item) {\n        return !(this.options.allowedMimeType && this.options.allowedMimeType.indexOf(item.type) === -1);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _fileSizeFilter(item) {\n        return !(this.options.maxFileSize && item.size > this.options.maxFileSize);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _fileTypeFilter(item) {\n        return !(this.options.allowedFileType &&\n            this.options.allowedFileType.indexOf(FileType.getMimeClass(item)) === -1);\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onErrorItem(item, response, status, headers) {\n        item._onError(response, status, headers);\n        this.onErrorItem(item, response, status, headers);\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCompleteItem(item, response, status, headers) {\n        item._onComplete(response, status, headers);\n        this.onCompleteItem(item, response, status, headers);\n        /** @type {?} */\n        let nextItem = this.getReadyItems()[0];\n        this.isUploading = false;\n        if (nextItem) {\n            nextItem.upload();\n            return;\n        }\n        this.onCompleteAll();\n        this.progress = this._getTotalProgress();\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?} parsedHeaders\n     * @return {?}\n     */\n    _headersGetter(parsedHeaders) {\n        return (/**\n         * @param {?} name\n         * @return {?}\n         */\n        (name) => {\n            if (name) {\n                return parsedHeaders[name.toLowerCase()] || void 0;\n            }\n            return parsedHeaders;\n        });\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _xhrTransport(item) {\n        /** @type {?} */\n        let that = this;\n        /** @type {?} */\n        let xhr = item._xhr = new XMLHttpRequest();\n        /** @type {?} */\n        let sendable;\n        this._onBeforeUploadItem(item);\n        if (typeof item._file.size !== 'number') {\n            throw new TypeError('The file specified is no longer valid');\n        }\n        if (!this.options.disableMultipart) {\n            sendable = new FormData();\n            this._onBuildItemForm(item, sendable);\n            /** @type {?} */\n            const appendFile = (/**\n             * @return {?}\n             */\n            () => sendable.append(item.alias, item._file, item.file.name));\n            if (!this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n            // For AWS, Additional Parameters must come BEFORE Files\n            if (this.options.additionalParameter !== undefined) {\n                Object.keys(this.options.additionalParameter).forEach((/**\n                 * @param {?} key\n                 * @return {?}\n                 */\n                (key) => {\n                    /** @type {?} */\n                    let paramVal = this.options.additionalParameter[key];\n                    // Allow an additional parameter to include the filename\n                    if (typeof paramVal === 'string' && paramVal.indexOf('{{file_name}}') >= 0) {\n                        paramVal = paramVal.replace('{{file_name}}', item.file.name);\n                    }\n                    sendable.append(key, paramVal);\n                }));\n            }\n            if (this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n        }\n        else {\n            sendable = this.options.formatDataFunction(item);\n        }\n        xhr.upload.onprogress = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            /** @type {?} */\n            let progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n            this._onProgressItem(item, progress);\n        });\n        xhr.onload = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            /** @type {?} */\n            let gist = this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n            /** @type {?} */\n            let method = '_on' + gist + 'Item';\n            ((/** @type {?} */ (this)))[method](item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.onerror = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            this._onErrorItem(item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.onabort = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            this._onCancelItem(item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.open(item.method, item.url, true);\n        xhr.withCredentials = item.withCredentials;\n        if (this.options.headers) {\n            for (let header of this.options.headers) {\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (item.headers.length) {\n            for (let header of item.headers) {\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (this.authToken) {\n            xhr.setRequestHeader(this.authTokenHeader, this.authToken);\n        }\n        xhr.onreadystatechange = (/**\n         * @return {?}\n         */\n        function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                that.response.emit(xhr.responseText);\n            }\n        });\n        if (this.options.formatDataFunctionIsAsync) {\n            sendable.then((/**\n             * @param {?} result\n             * @return {?}\n             */\n            (result) => xhr.send(JSON.stringify(result))));\n        }\n        else {\n            xhr.send(sendable);\n        }\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?=} value\n     * @return {?}\n     */\n    _getTotalProgress(value = 0) {\n        if (this.options.removeAfterUpload) {\n            return value;\n        }\n        /** @type {?} */\n        let notUploaded = this.getNotUploadedItems().length;\n        /** @type {?} */\n        let uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n        /** @type {?} */\n        let ratio = 100 / this.queue.length;\n        /** @type {?} */\n        let current = value * ratio / 100;\n        return Math.round(uploaded * ratio + current);\n    }\n    /**\n     * @protected\n     * @param {?} filters\n     * @return {?}\n     */\n    _getFilters(filters) {\n        if (!filters) {\n            return this.options.filters;\n        }\n        if (Array.isArray(filters)) {\n            return filters;\n        }\n        if (typeof filters === 'string') {\n            /** @type {?} */\n            let names = filters.match(/[^\\s,]+/g);\n            return this.options.filters\n                .filter((/**\n             * @param {?} filter\n             * @return {?}\n             */\n            (filter) => names.indexOf(filter.name) !== -1));\n        }\n        return this.options.filters;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _render() {\n        return void 0;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _queueLimitFilter() {\n        return this.options.queueLimit === undefined || this.queue.length < this.options.queueLimit;\n    }\n    /**\n     * @protected\n     * @param {?} file\n     * @param {?} filters\n     * @param {?} options\n     * @return {?}\n     */\n    _isValidFile(file, filters, options) {\n        this._failFilterIndex = -1;\n        return !filters.length ? true : filters.every((/**\n         * @param {?} filter\n         * @return {?}\n         */\n        (filter) => {\n            this._failFilterIndex++;\n            return filter.fn.call(this, file, options);\n        }));\n    }\n    /**\n     * @protected\n     * @param {?} status\n     * @return {?}\n     */\n    _isSuccessCode(status) {\n        return (status >= 200 && status < 300) || status === 304;\n    }\n    /**\n     * @protected\n     * @param {?} response\n     * @param {?} headers\n     * @return {?}\n     */\n    _transformResponse(response, headers) {\n        return response;\n    }\n    /**\n     * @protected\n     * @param {?} headers\n     * @return {?}\n     */\n    _parseHeaders(headers) {\n        /** @type {?} */\n        let parsed = {};\n        /** @type {?} */\n        let key;\n        /** @type {?} */\n        let val;\n        /** @type {?} */\n        let i;\n        if (!headers) {\n            return parsed;\n        }\n        headers.split('\\n').map((/**\n         * @param {?} line\n         * @return {?}\n         */\n        (line) => {\n            i = line.indexOf(':');\n            key = line.slice(0, i).trim().toLowerCase();\n            val = line.slice(i + 1).trim();\n            if (key) {\n                parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n            }\n        }));\n        return parsed;\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} filter\n     * @param {?} options\n     * @return {?}\n     */\n    _onWhenAddingFileFailed(item, filter, options) {\n        this.onWhenAddingFileFailed(item, filter, options);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _onAfterAddingFile(item) {\n        this.onAfterAddingFile(item);\n    }\n    /**\n     * @protected\n     * @param {?} items\n     * @return {?}\n     */\n    _onAfterAddingAll(items) {\n        this.onAfterAddingAll(items);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _onBeforeUploadItem(item) {\n        item._onBeforeUpload();\n        this.onBeforeUploadItem(item);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} form\n     * @return {?}\n     */\n    _onBuildItemForm(item, form) {\n        item._onBuildForm(form);\n        this.onBuildItemForm(item, form);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} progress\n     * @return {?}\n     */\n    _onProgressItem(item, progress) {\n        /** @type {?} */\n        let total = this._getTotalProgress(progress);\n        this.progress = total;\n        item._onProgress(progress);\n        this.onProgressItem(item, progress);\n        this.onProgressAll(total);\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onSuccessItem(item, response, status, headers) {\n        item._onSuccess(response, status, headers);\n        this.onSuccessItem(item, response, status, headers);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCancelItem(item, response, status, headers) {\n        item._onCancel(response, status, headers);\n        this.onCancelItem(item, response, status, headers);\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileUploader.prototype.authToken;\n    /** @type {?} */\n    FileUploader.prototype.isUploading;\n    /** @type {?} */\n    FileUploader.prototype.queue;\n    /** @type {?} */\n    FileUploader.prototype.progress;\n    /** @type {?} */\n    FileUploader.prototype._nextIndex;\n    /** @type {?} */\n    FileUploader.prototype.autoUpload;\n    /** @type {?} */\n    FileUploader.prototype.authTokenHeader;\n    /** @type {?} */\n    FileUploader.prototype.response;\n    /** @type {?} */\n    FileUploader.prototype.options;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileUploader.prototype._failFilterIndex;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileSelectDirective {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        this.onFileSelected = new EventEmitter();\n        this.element = element;\n    }\n    /**\n     * @return {?}\n     */\n    getOptions() {\n        return this.uploader.options;\n    }\n    /**\n     * @return {?}\n     */\n    getFilters() {\n        return {};\n    }\n    /**\n     * @return {?}\n     */\n    isEmptyAfterSelection() {\n        return !!this.element.nativeElement.attributes.multiple;\n    }\n    /**\n     * @return {?}\n     */\n    onChange() {\n        /** @type {?} */\n        let files = this.element.nativeElement.files;\n        /** @type {?} */\n        let options = this.getOptions();\n        /** @type {?} */\n        let filters = this.getFilters();\n        this.uploader.addToQueue(files, options, filters);\n        this.onFileSelected.emit(files);\n        if (this.isEmptyAfterSelection()) {\n            this.element.nativeElement.value = '';\n        }\n    }\n}\nFileSelectDirective.Éµfac = function FileSelectDirective_Factory(t) { return new (t || FileSelectDirective)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef)); };\nFileSelectDirective.Éµdir = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineDirective({ type: FileSelectDirective, selectors: [[\"\", \"ng2FileSelect\", \"\"]], hostBindings: function FileSelectDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        Éµngcc0.ÉµÉµlistener(\"change\", function FileSelectDirective_change_HostBindingHandler() { return ctx.onChange(); });\n    } }, inputs: { uploader: \"uploader\" }, outputs: { onFileSelected: \"onFileSelected\" } });\n/** @nocollapse */\nFileSelectDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nFileSelectDirective.propDecorators = {\n    uploader: [{ type: Input }],\n    onFileSelected: [{ type: Output }],\n    onChange: [{ type: HostListener, args: ['change',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(FileSelectDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng2FileSelect]' }]\n    }], function () { return [{ type: Éµngcc0.ElementRef }]; }, { onFileSelected: [{\n            type: Output\n        }], \n    /**\n     * @return {?}\n     */\n    onChange: [{\n            type: HostListener,\n            args: ['change']\n        }], uploader: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    FileSelectDirective.prototype.uploader;\n    /** @type {?} */\n    FileSelectDirective.prototype.onFileSelected;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileSelectDirective.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileDropDirective {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        this.fileOver = new EventEmitter();\n        this.onFileDrop = new EventEmitter();\n        this.element = element;\n    }\n    /**\n     * @return {?}\n     */\n    getOptions() {\n        return this.uploader.options;\n    }\n    /**\n     * @return {?}\n     */\n    getFilters() {\n        return {};\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDrop(event) {\n        /** @type {?} */\n        let transfer = this._getTransfer(event);\n        if (!transfer) {\n            return;\n        }\n        /** @type {?} */\n        let options = this.getOptions();\n        /** @type {?} */\n        let filters = this.getFilters();\n        this._preventAndStop(event);\n        this.uploader.addToQueue(transfer.files, options, filters);\n        this.fileOver.emit(false);\n        this.onFileDrop.emit(transfer.files);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragOver(event) {\n        /** @type {?} */\n        let transfer = this._getTransfer(event);\n        if (!this._haveFiles(transfer.types)) {\n            return;\n        }\n        transfer.dropEffect = 'copy';\n        this._preventAndStop(event);\n        this.fileOver.emit(true);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragLeave(event) {\n        if (((/** @type {?} */ (this))).element) {\n            if (event.currentTarget === ((/** @type {?} */ (this))).element[0]) {\n                return;\n            }\n        }\n        this._preventAndStop(event);\n        this.fileOver.emit(false);\n    }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _getTransfer(event) {\n        return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n    }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _preventAndStop(event) {\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    /**\n     * @protected\n     * @param {?} types\n     * @return {?}\n     */\n    _haveFiles(types) {\n        if (!types) {\n            return false;\n        }\n        if (types.indexOf) {\n            return types.indexOf('Files') !== -1;\n        }\n        else if (types.contains) {\n            return types.contains('Files');\n        }\n        else {\n            return false;\n        }\n    }\n}\nFileDropDirective.Éµfac = function FileDropDirective_Factory(t) { return new (t || FileDropDirective)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef)); };\nFileDropDirective.Éµdir = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineDirective({ type: FileDropDirective, selectors: [[\"\", \"ng2FileDrop\", \"\"]], hostBindings: function FileDropDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        Éµngcc0.ÉµÉµlistener(\"drop\", function FileDropDirective_drop_HostBindingHandler($event) { return ctx.onDrop($event); })(\"dragover\", function FileDropDirective_dragover_HostBindingHandler($event) { return ctx.onDragOver($event); })(\"dragleave\", function FileDropDirective_dragleave_HostBindingHandler($event) { return ctx.onDragLeave($event); });\n    } }, inputs: { uploader: \"uploader\" }, outputs: { fileOver: \"fileOver\", onFileDrop: \"onFileDrop\" } });\n/** @nocollapse */\nFileDropDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nFileDropDirective.propDecorators = {\n    uploader: [{ type: Input }],\n    fileOver: [{ type: Output }],\n    onFileDrop: [{ type: Output }],\n    onDrop: [{ type: HostListener, args: ['drop', ['$event'],] }],\n    onDragOver: [{ type: HostListener, args: ['dragover', ['$event'],] }],\n    onDragLeave: [{ type: HostListener, args: ['dragleave', ['$event'],] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(FileDropDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng2FileDrop]' }]\n    }], function () { return [{ type: Éµngcc0.ElementRef }]; }, { fileOver: [{\n            type: Output\n        }], onFileDrop: [{\n            type: Output\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDrop: [{\n            type: HostListener,\n            args: ['drop', ['$event']]\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragOver: [{\n            type: HostListener,\n            args: ['dragover', ['$event']]\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragLeave: [{\n            type: HostListener,\n            args: ['dragleave', ['$event']]\n        }], uploader: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    FileDropDirective.prototype.uploader;\n    /** @type {?} */\n    FileDropDirective.prototype.fileOver;\n    /** @type {?} */\n    FileDropDirective.prototype.onFileDrop;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileDropDirective.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileUploadModule {\n}\nFileUploadModule.Éµfac = function FileUploadModule_Factory(t) { return new (t || FileUploadModule)(); };\nFileUploadModule.Éµmod = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineNgModule({ type: FileUploadModule });\nFileUploadModule.Éµinj = /*@__PURE__*/ Éµngcc0.ÉµÉµdefineInjector({ imports: [CommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && Éµngcc0.ÉµsetClassMetadata(FileUploadModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [FileDropDirective, FileSelectDirective],\n                exports: [FileDropDirective, FileSelectDirective]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && Éµngcc0.ÉµÉµsetNgModuleScope(FileUploadModule, { declarations: function () { return [FileDropDirective, FileSelectDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [FileDropDirective, FileSelectDirective]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { FileDropDirective, FileItem, FileLikeObject, FileSelectDirective, FileUploadModule, FileUploader };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}