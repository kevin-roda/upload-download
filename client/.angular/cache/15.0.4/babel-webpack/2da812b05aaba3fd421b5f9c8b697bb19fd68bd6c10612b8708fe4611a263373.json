{"ast":null,"code":"import { FileUploader } from 'ng2-file-upload';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ng2-file-upload\";\nexport class UploadComponent {\n  constructor(http) {\n    this.http = http;\n    this.urlApi = 'http://localhost:9000/api/upload';\n    this.uploader = new FileUploader({\n      url: this.urlApi,\n      itemAlias: 'fieldName'\n    });\n  }\n  ngOnInit() {\n    this.uploader.onAfterAddingFile = fichier => {\n      // si la requête n'utilise pas des identifiants\n      fichier.withCredentials = false;\n      console.log('Fichier ajouté:', fichier);\n    };\n    this.uploader.onCompleteItem = (item, status) => {\n      console.log('Fichier envoyé:', item);\n    };\n  }\n  downloadFile(url) {\n    // on ajoute des headers (util si on souhaite sécuriser le download)\n    const headers = new HttpHeaders();\n    // on envoie une requête pour récupèrer notre fichier\n    this.http.get(url, {\n      headers,\n      responseType: 'blob'\n    }).subscribe(\n    // quand le téléchargement est terminé \n    response => {\n      // on récupère le type de fichier reçus (jps,txt,etc..)\n      let dataType = response.type;\n      // on stock toutes les données de la requête dans un tableau\n      let binaryData = [];\n      binaryData.push(response);\n      // on crée un élement qui nous permettra de stocké vituelement notre objet\n      let downloadLink = document.createElement('a');\n      // on créer un objet depuis les données de la requête puis on récupère son url\n      downloadLink.href = window.URL.createObjectURL(new Blob(binaryData, {\n        type: dataType\n      }));\n      downloadLink.setAttribute('download', 'nomfichier');\n      downloadLink.setAttribute('target', '_blank');\n      document.body.appendChild(downloadLink);\n      downloadLink.click();\n      downloadLink.remove();\n    });\n  }\n  print() {\n    // on créer le header de notre futur document\n    var header = \"<html xmlns:o='urn:schemas-microsoft-com:office:office' \" + \"xmlns:w='urn:schemas-microsoft-com:office:word' \" + \"xmlns='http://www.w3.org/TR/REC-html40'>\" + \"<head><meta charset='utf-8'><title>Export HTML to Word Document with JavaScript</title></head><body>\";\n    // on créer le footer de notre futur document\n    var footer = \"</body></html>\";\n    // on récupère la div contenant notre html\n    let content = document.querySelector(\".document_container\");\n    // on ajoute à la suite dans une variable le header,le content et le footer\n    var sourceHTML = header;\n    if (content != null) {\n      sourceHTML += content.innerHTML;\n    }\n    sourceHTML += footer;\n    // on créer puis on récupère l'url d'un fichier virtuel\n    var source = 'data:application/vnd.ms-word;charset=utf-8,' + encodeURIComponent(sourceHTML);\n    // on le télécharge grâce à un élement créer virtuelement\n    var fileDownload = document.createElement(\"a\");\n    document.body.appendChild(fileDownload);\n    fileDownload.href = source;\n    fileDownload.download = 'document.doc';\n    fileDownload.click();\n    document.body.removeChild(fileDownload);\n  }\n}\nUploadComponent.ɵfac = function UploadComponent_Factory(t) {\n  return new (t || UploadComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nUploadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UploadComponent,\n  selectors: [[\"app-upload\"]],\n  decls: 20,\n  vars: 2,\n  consts: [[1, \"wrapper\"], [1, \"file-upload\"], [\"type\", \"file\", \"name\", \"document\", \"ng2FileSelect\", \"\", \"accept\", \"*\", 3, \"uploader\"], [\"type\", \"button\", 3, \"disabled\", \"click\"], [3, \"click\"], [1, \"document_container\"]],\n  template: function UploadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Angular Image Upload Demo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1);\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵelementStart(5, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function UploadComponent_Template_button_click_5_listener() {\n        return ctx.uploader.uploadAll();\n      });\n      i0.ɵɵtext(6, \" Upload \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"h2\");\n      i0.ɵɵtext(8, \"T\\u00E9l\\u00E9charger\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function UploadComponent_Template_button_click_9_listener() {\n        return ctx.downloadFile(\"http://localhost:3000/documents/Capture d\\u2019\\u00E9cran de 2022-12-06 10-33-34.png\");\n      });\n      i0.ɵɵtext(10, \"download\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"h2\");\n      i0.ɵɵtext(12, \"Cr\\u00E9er un fichier depusi le html\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function UploadComponent_Template_button_click_13_listener() {\n        return ctx.print();\n      });\n      i0.ɵɵtext(14, \"Imprimer le document ci dessous :\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 5)(16, \"h1\");\n      i0.ɵɵtext(17, \"Test d'impression\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"p\");\n      i0.ɵɵtext(19, \"Lorem ipsum, dolor sit amet consectetur adipisicing elit. Et cumque adipisci sapiente asperiores impedit? Neque, assumenda corrupti? Culpa a repellat aliquid debitis voluptates saepe asperiores non eveniet dolores! Praesentium, quos?\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"uploader\", ctx.uploader);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.uploader.getNotUploadedItems().length);\n    }\n  },\n  dependencies: [i2.FileSelectDirective],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAAqBC,WAAW,QAAsB,sBAAsB;;;;AAO5E,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADxB,WAAM,GAAW,kCAAkC;IAE5C,aAAQ,GAAiB,IAAIJ,YAAY,CAAC;MAC/CK,GAAG,EAAE,IAAI,CAACC,MAAM;MAChBC,SAAS,EAAE;KACZ,CAAC;EAJsC;EAKxCC,QAAQ;IACN,IAAI,CAACC,QAAQ,CAACC,iBAAiB,GAAIC,OAAY,IAAI;MACjD;MACAA,OAAO,CAACC,eAAe,GAAG,KAAK;MAC/BC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,OAAO,CAAC;IACzC,CAAC;IACD,IAAI,CAACF,QAAQ,CAACM,cAAc,GAAG,CAACC,IAAS,EAAEC,MAAW,KAAI;MACxDJ,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEE,IAAI,CAAC;IACtC,CAAC;EACH;EAEAE,YAAY,CAACb,GAAW;IACtB;IACA,MAAMc,OAAO,GAAG,IAAIlB,WAAW,EAAE;IAEjC;IACA,IAAI,CAACG,IAAI,CAACgB,GAAG,CAACf,GAAG,EAAE;MAAEc,OAAO;MAAEE,YAAY,EAAE;IAAgB,CAAE,CAAC,CAACC,SAAS;IACvE;IACCC,QAAa,IAAI;MAChB;MACA,IAAIC,QAAQ,GAAGD,QAAQ,CAACE,IAAI;MAE5B;MACA,IAAIC,UAAU,GAAG,EAAE;MACnBA,UAAU,CAACC,IAAI,CAACJ,QAAQ,CAAC;MAEzB;MACA,IAAIK,YAAY,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MAE9C;MACAF,YAAY,CAACG,IAAI,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAACT,UAAU,EAAE;QAAED,IAAI,EAAED;MAAQ,CAAE,CAAC,CAAC;MACxFI,YAAY,CAACQ,YAAY,CAAC,UAAU,EAAE,YAAY,CAAC;MACnDR,YAAY,CAACQ,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC;MAE7CP,QAAQ,CAACQ,IAAI,CAACC,WAAW,CAACV,YAAY,CAAC;MAEvCA,YAAY,CAACW,KAAK,EAAE;MACpBX,YAAY,CAACY,MAAM,EAAE;IACvB,CAAC,CACF;EACH;EAEAC,KAAK;IACH;IACA,IAAIC,MAAM,GAAG,0DAA0D,GACrE,kDAAkD,GAClD,0CAA0C,GAC1C,sGAAsG;IACxG;IACA,IAAIC,MAAM,GAAG,gBAAgB;IAE7B;IACA,IAAIC,OAAO,GAAGf,QAAQ,CAACgB,aAAa,CAAC,qBAAqB,CAAuB;IAEjF;IACA,IAAIC,UAAU,GAAGJ,MAAM;IACvB,IAAIE,OAAO,IAAI,IAAI,EAAE;MACnBE,UAAU,IAAIF,OAAO,CAACG,SAAS;;IAEjCD,UAAU,IAAIH,MAAM;IAEpB;IACA,IAAIK,MAAM,GAAG,6CAA6C,GAAGC,kBAAkB,CAACH,UAAU,CAAC;IAE3F;IACA,IAAII,YAAY,GAAGrB,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IAC9CD,QAAQ,CAACQ,IAAI,CAACC,WAAW,CAACY,YAAY,CAAC;IACvCA,YAAY,CAACnB,IAAI,GAAGiB,MAAM;IAC1BE,YAAY,CAACC,QAAQ,GAAG,cAAc;IACtCD,YAAY,CAACX,KAAK,EAAE;IACpBV,QAAQ,CAACQ,IAAI,CAACe,WAAW,CAACF,YAAY,CAAC;EAEzC;;AAhFWhD,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAmD;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT5BC,8BAAqB;MACbA,yCAAyB;MAAAA,iBAAK;MAClCA,8BAAyB;MACrBA,2BAAoF;MACpFA,iCAAyG;MAAnFA;QAAA,OAASC,wBAAoB;MAAA,EAAC;MAChDD,wBACJ;MAAAA,iBAAS;MAEbA,0BAAI;MAAAA,qCAAW;MAAAA,iBAAK;MACpBA,iCACyG;MAArGA;QAAA,OAASC,iBAAa,sFAA4E,CAAC;MAAA,EAAC;MAACD,yBAAQ;MAAAA,iBAAS;MAC1HA,2BAAI;MAAAA,qDAA+B;MAAAA,iBAAK;MAExCA,kCAA0B;MAAlBA;QAAA,OAASC,WAAO;MAAA,EAAC;MAACD,kDAAiC;MAAAA,iBAAS;MAEpEA,+BAAgC;MACxBA,kCAAiB;MAAAA,iBAAK;MAC1BA,0BAAG;MAAAA,0PAEmB;MAAAA,iBAAI;;;MAhBuBA,eAAqB;MAArBA,uCAAqB;MACjBA,eAAmD;MAAnDA,qEAAmD","names":["FileUploader","HttpHeaders","UploadComponent","constructor","http","url","urlApi","itemAlias","ngOnInit","uploader","onAfterAddingFile","fichier","withCredentials","console","log","onCompleteItem","item","status","downloadFile","headers","get","responseType","subscribe","response","dataType","type","binaryData","push","downloadLink","document","createElement","href","window","URL","createObjectURL","Blob","setAttribute","body","appendChild","click","remove","print","header","footer","content","querySelector","sourceHTML","innerHTML","source","encodeURIComponent","fileDownload","download","removeChild","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/pilki/Documents/work/nodejs/cours download/envoieDeFile/src/app/upload/upload.component.ts","/home/pilki/Documents/work/nodejs/cours download/envoieDeFile/src/app/upload/upload.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http'\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.css']\n})\nexport class UploadComponent {\n\n  urlApi: string = 'http://localhost:9000/api/upload';\n  constructor(private http: HttpClient) { }\n  public uploader: FileUploader = new FileUploader({\n    url: this.urlApi,\n    itemAlias: 'fieldName',\n  });\n  ngOnInit() {\n    this.uploader.onAfterAddingFile = (fichier: any) => {\n      // si la requête n'utilise pas des identifiants\n      fichier.withCredentials = false;\n      console.log('Fichier ajouté:', fichier);\n    };\n    this.uploader.onCompleteItem = (item: any, status: any) => {\n      console.log('Fichier envoyé:', item);\n    };\n  }\n\n  downloadFile(url: string): any {\n    // on ajoute des headers (util si on souhaite sécuriser le download)\n    const headers = new HttpHeaders();\n\n    // on envoie une requête pour récupèrer notre fichier\n    this.http.get(url, { headers, responseType: 'blob' as 'json' }).subscribe(\n      // quand le téléchargement est terminé \n      (response: any) => {\n        // on récupère le type de fichier reçus (jps,txt,etc..)\n        let dataType = response.type;\n\n        // on stock toutes les données de la requête dans un tableau\n        let binaryData = [];\n        binaryData.push(response);\n\n        // on crée un élement qui nous permettra de stocké vituelement notre objet\n        let downloadLink = document.createElement('a');\n\n        // on créer un objet depuis les données de la requête puis on récupère son url\n        downloadLink.href = window.URL.createObjectURL(new Blob(binaryData, { type: dataType }));\n        downloadLink.setAttribute('download', 'nomfichier');\n        downloadLink.setAttribute('target', '_blank');\n\n        document.body.appendChild(downloadLink);\n\n        downloadLink.click();\n        downloadLink.remove();\n      }\n    )\n  }\n\n  print() {\n    // on créer le header de notre futur document\n    var header = \"<html xmlns:o='urn:schemas-microsoft-com:office:office' \" +\n      \"xmlns:w='urn:schemas-microsoft-com:office:word' \" +\n      \"xmlns='http://www.w3.org/TR/REC-html40'>\" +\n      \"<head><meta charset='utf-8'><title>Export HTML to Word Document with JavaScript</title></head><body>\";\n    // on créer le footer de notre futur document\n    var footer = \"</body></html>\";\n\n    // on récupère la div contenant notre html\n    let content = document.querySelector(\".document_container\") as HTMLElement | null;\n\n    // on ajoute à la suite dans une variable le header,le content et le footer\n    var sourceHTML = header;\n    if (content != null) {\n      sourceHTML += content.innerHTML\n    }\n    sourceHTML += footer;\n\n    // on créer puis on récupère l'url d'un fichier virtuel\n    var source = 'data:application/vnd.ms-word;charset=utf-8,' + encodeURIComponent(sourceHTML);\n\n    // on le télécharge grâce à un élement créer virtuelement\n    var fileDownload = document.createElement(\"a\");\n    document.body.appendChild(fileDownload);\n    fileDownload.href = source;\n    fileDownload.download = 'document.doc';\n    fileDownload.click();\n    document.body.removeChild(fileDownload);\n\n  }\n\n\n}\n","<div class=\"wrapper\">\n    <h2>Angular Image Upload Demo</h2>\n    <div class=\"file-upload\">\n        <input type=\"file\" name=\"document\" ng2FileSelect [uploader]=\"uploader\" accept=\"*\" />\n        <button type=\"button\" (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n            Upload\n        </button>\n    </div>\n    <h2>Télécharger</h2>\n    <button\n        (click)=\"downloadFile('http://localhost:3000/documents/Capture d’écran de 2022-12-06 10-33-34.png')\">download</button>\n    <h2>Créer un fichier depusi le html</h2>\n\n    <button (click)=\"print()\">Imprimer le document ci dessous :</button>\n\n    <div class=\"document_container\">\n        <h1>Test d'impression</h1>\n        <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Et cumque adipisci sapiente asperiores impedit?\n            Neque, assumenda corrupti? Culpa a repellat aliquid debitis voluptates saepe asperiores non eveniet dolores!\n            Praesentium, quos?</p>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}